{"version":3,"sources":["components/layout/ErrorMessage.js","constants/users.js","constants/products.js","fakeBackend.js","store/actions/authActions.js","store/actions/action_creators/auth.js","components/auth/Login.js","components/layout/Message.js","components/auth/Register.js","store/actions/productsActions.js","store/actions/action_creators/products.js","components/reusable/Product.js","components/reusable/ProductList.js","components/products/Products.js","components/cart/CartItem.js","components/cart/Cart.js","components/cart/Address.js","components/cart/UserAddresses.js","components/account/Account.js","components/account/AddAddress.js","components/cart/Payment.js","components/cart/Checkout.js","components/account/UpdateAddress.js","components/account/OrderItem.js","components/account/Order.js","components/account/Orders.js","Routes.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/App.js","store/reducers/authReducer.js","store/reducers/productsReducer.js","store/reducers/rootReducer.js","store.js","index.js"],"names":["ErrorMessage","props","react_default","a","createElement","className","style","message","width","height","backgroundColor","border","color","borderRadius","padding","margin","lineHeight","fontSize","wordBreak","users","username","password","addresses","orders","id","products","name","image","quantity","price","fakeBackend","backend","_this","this","Object","classCallCheck","register","creds","find","user","passwordRepeat","errors","push","status","msg","login","token","userInfo","addAddress","address","length","map","Math","random","error","updateAddress","newAddresses","item","addressID","deleteAddress","console","log","filter","getOrders","placeOrder","order","cartItems","forEach","product","cartQuantity","date","Date","concat","getDate","getMonth","getFullYear","action_resetErrors","dispatch","type","action_updateAddress","data","action_deleteAddress","Login","state","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","_this$state","action_login","auth","isEmpty","react_router","to","_this$state2","loginErrors","logErrors","i","layout_ErrorMessage","key","formErrors","onSubmit","htmlFor","onChange","react_router_dom","Component","connect","Register","action_register","_this2","registerErrors","regErrors","regMsg","Message","incrementProductQuantity","incrementProduct","decrementProductQuantity","decrementProduct","RemoveFromCart","removeFromCart","Product","handleAddToCart","history","AddToCart","_this$props$data","inCart","src","alt","disabled","onClick","withRouter","addToCart","ProductList","loading","textAlign","productData","reusable_Product","Products","GetProducts","path","match","reusable_ProductList","slice","CartItem","dontShowAllButtons","Fragment","increment","remove","decrement","Cart","items","cart_CartItem","total","setUpdateAddress","setAddressIdToUpdate","_props$address","street","zipCode","city","country","number","active","borderColor","dontShowButtons","select","makeActive","delete","UserAddresses","addressComponents","activeAddressID","cart_Address","action_makeAddressActive","makeAddressActive","Account","AddAddress","action_addNewAddress","userId","handleChnage","resetErrors","_this$props","addressError","addressMsg","goBack","cartItemNumber","Checkout","handlePlaceOrder","action_placeOrder","action_resetOrderErrors","checkoutLoading","orderMsg","orderError","marginBottom","UpdateAddress","updateAddressID","OrderItem","Order","account_OrderItem","hStyle","Orders","action_getUserOrders","account_Order","userOrders","Routes","exact","component","Payment","SignedInLinks","handleLogout","action_logout","href","SignedOutLinks","Navbar","action_checkIfLoggedIn","loginCheck","layout_SignedOutLinks","layout_SignedInLinks","App","layout_Navbar","src_Routes","initState","logMsg","authReducer","arguments","undefined","action","objectSpread","localStorage","setItem","removeItem","productsReducer","foundItem","newItem","toConsumableArray","newCartItems","newProducts","rootReducer","combineReducers","store","configureStore","reducer","middleware","thunk","devTools","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"+PAUeA,EARM,SAACC,GACrB,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,MAAOA,GACnCL,EAAMM,SAAW,kBAOhBD,EAAQ,CACVE,MAAO,OACPC,OAAQ,OACRC,gBAAiB,mBACjBC,OAAQ,6BACRC,MAAO,QACPC,aAAc,MACdC,QAAS,OACTC,OAAQ,SACRC,WAAY,OACZC,SAAU,OACVC,UAAW,cCSAC,EAhCD,CACV,CACIC,SAAU,QACVC,SAAU,WACVC,UAAW,GACXC,OAAQ,GACRC,GAAI,GAER,CACIJ,SAAU,QACVC,SAAU,WACVC,UAAW,GACXC,OAAQ,GACRC,GAAI,GAER,CACIJ,SAAU,QACVC,SAAU,WACVC,UAAW,GACXC,OAAQ,GACRC,GAAI,GAER,CACIJ,SAAU,MACVC,SAAU,MACVC,UAAW,GACXC,OAAQ,GACRC,GAAI,IC8CGC,EAzEE,CACb,CACID,GAAI,EACJE,KAAM,MACNC,MAAO,WACPC,SAAU,IACVC,MAAO,KAEX,CACIL,GAAI,EACJE,KAAM,YACNC,MAAO,WACPC,SAAU,EACVC,MAAO,KAEX,CACIL,GAAI,EACJE,KAAM,cACNC,MAAO,WACPC,SAAU,GACVC,MAAO,KAEX,CACIL,GAAI,EACJE,KAAM,UACNC,MAAO,WACPC,SAAU,GACVC,MAAO,KAEX,CACIL,GAAI,EACJE,KAAM,OACNC,MAAO,WACPC,SAAU,GACVC,MAAO,IAEX,CACIL,GAAI,EACJE,KAAM,SACNC,MAAO,WACPC,SAAU,GACVC,MAAO,IAEX,CACIL,GAAI,EACJE,KAAM,SACNC,MAAO,WACPC,SAAU,IACVC,MAAO,KAEX,CACIL,GAAI,EACJE,KAAM,WACNC,MAAO,WACPC,SAAU,EACVC,MAAO,IAEX,CACIL,GAAI,EACJE,KAAM,gBACNC,MAAO,WACPC,SAAU,GACVC,MAAO,KAEX,CACIL,GAAI,GACJE,KAAM,YACNC,MAAO,YACPC,SAAU,IACVC,MAAO,MC6FAC,EAAA,IA7JX,SAAAC,IAAa,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAKbG,SAAW,SAAAC,GAAS,IACRjB,EAAaY,EAAKb,MAAlBC,SACR,OAAGY,EAAKb,MAAMmB,KAAK,SAAAC,GAAI,OAAIA,EAAKnB,WAAaA,KAAaiB,EAAMhB,WAAagB,EAAMG,eACxE,CACHC,OAAQ,CAAC,6BAEjBT,EAAKb,MAAMuB,KAAK,CACZtB,SAAUiB,EAAMjB,SAChBC,SAAUgB,EAAMhB,SAChBC,UAAW,GACXC,OAAQ,KAEL,CACHoB,OAAQ,mBACRC,IAAK,yBAnBAX,KAuBbY,MAAQ,SAAAR,GAAS,IACLhB,EAAuBgB,EAAvBhB,SAAUD,EAAaiB,EAAbjB,SACZmB,EAAOP,EAAKb,MAAMmB,KAAK,SAAAC,GAAI,OAAIA,EAAKnB,WAAaA,IACvD,OAAGmB,GAAQA,EAAKlB,WAAaA,EAClB,CACHsB,OAAQ,gBACRG,MAAO,QACPF,IAAK,GACLG,SAAU,CACN3B,SAAUmB,EAAKnB,SACfE,UAAWiB,EAAKjB,UAChBE,GAAIe,EAAKf,KAGd,CACHiB,OAAQ,CAAC,2BAtCJR,KA0Cbe,WAAa,SAACC,EAASzB,GACnB,IAAMe,EAAOP,EAAKb,MAAMmB,KAAK,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,IACjD,GAAGe,GAAQA,EAAKjB,UAAU4B,OAAS,EAAE,CACjClB,EAAKb,MAAMgC,IAAI,SAAAZ,GAKX,OAJGA,EAAKf,KAAOA,IACXyB,EAAQzB,GAAK4B,KAAKC,SAClBd,EAAKjB,UAAUoB,KAAKO,IAEjBV,IAGX,IAAMA,EAAOP,EAAKb,MAAMmB,KAAK,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,IAEjD,MAAO,CACHuB,SAAU,CACN3B,SAAUmB,EAAKnB,SACfE,UAAWiB,EAAKjB,UAChBE,GAAIe,EAAKf,IAEbmB,OAAQ,uBAGhB,MAAO,CACHW,MAAO,8BAjEFrB,KAqEbsB,cAAgB,SAACN,EAASzB,GACtB,IAAMe,EAAOP,EAAKb,MAAMmB,KAAK,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,IACjD,GAAGe,EAAK,CACJ,IAAMiB,EAAejB,EAAKjB,UAAU6B,IAAI,SAAAM,GAKpC,OAJGA,EAAKjC,KAAOyB,EAAQS,aACnBD,EAAOR,GACFzB,GAAKyB,EAAQS,WAEfD,IAUX,OAPAlB,EAAKjB,UAAYkC,EAEjBxB,EAAKb,MAAQa,EAAKb,MAAMgC,IAAI,SAAAM,GACxB,OAAGA,EAAKjC,KAAOe,EAAKf,GAAWe,EACxBkB,IAGJ,CACHV,SAAU,CACN3B,SAAUmB,EAAKnB,SACfE,UAAWiB,EAAKjB,UAChBE,GAAIe,EAAKf,IAEbmB,OAAQ,0BAGhB,MAAO,IAhGEV,KAmGb0B,cAAgB,SAACD,EAAWlC,GACxBoC,QAAQC,IAAIH,EAAWlC,GACvB,IAAMe,EAAOP,EAAKb,MAAMmB,KAAK,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,IAEjD,GADAoC,QAAQC,IAAItB,GACTA,EAAK,CACJ,IAAMiB,EAAejB,EAAKjB,UAAUwC,OAAO,SAAAL,GAAI,OAAIA,EAAKjC,KAAOkC,IAS/D,OAPA1B,EAAKb,MAAMgC,IAAI,SAAAM,GAEX,OADGA,EAAKjC,KAAOe,EAAKf,KAAIiC,EAAKnC,UAAYkC,GAClCC,IAGXG,QAAQC,IAAI7B,EAAKb,OAEV,CACH4B,SAAU,CACN3B,SAAUmB,EAAKnB,SACfE,UAAWiB,EAAKjB,UAChBE,GAAIe,EAAKf,IAEbmB,OAAQ,0BAGhB,MAAO,IA1HEV,KA6Hb8B,UAAY,SAAAvC,GAER,OADeQ,EAAKb,MAAMmB,KAAK,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,IAAID,QA9H9CU,KAkIb+B,WAAa,SAACC,EAAOzC,GACjByC,EAAMzC,GAAK4B,KAAKC,SAChBY,EAAMC,UAAUC,QAAQ,SAAAV,GACpBzB,EAAKP,SAAS0B,IAAI,SAAAiB,GAId,OAHGA,EAAQ5C,KAAOiC,EAAKjC,KACnB4C,EAAQxC,UAAY6B,EAAKY,cAEtBD,MAGf,IAAME,EAAO,IAAIC,KASjB,OARAN,EAAMK,KAAN,GAAAE,OAAgBF,EAAKG,UAArB,KAAAD,OAAkCF,EAAKI,WAAW,EAAlD,KAAAF,OAAuDF,EAAKK,eAC5DV,EAAMzC,GAAK4B,KAAKC,SAEhBrB,EAAKb,MAAMgC,IAAI,SAAAZ,GAEX,OADGA,EAAKf,KAAOA,GAAIe,EAAKhB,OAAOmB,KAAKuB,GAC7B1B,IAGJ,CACHI,OAAQ,oBArJZV,KAAKd,MAAQA,EACbc,KAAKR,SAAWA,GCyCXmD,EAAqB,kBAAM,SAAAC,GAAQ,OAAIA,EC2BlB,CAC9BC,KAlEwB,mBDqDfC,EAAuB,SAAC9B,EAASzB,GAC1C,OAAO,SAAAqD,GACHA,EC8B4B,CAChCC,KAlF0B,mBDoDtB,IAAME,EAAOlD,EAAYyB,cAAcN,EAAQzB,GAC5B,2BAAhBwD,EAAKrC,OACJkC,EC+BqC,CAC7CC,KArFkC,yBAsFlC/B,SDjCsCiC,EAAKjC,WAEnC8B,ECkC8B,CACtCC,KAzFiC,4BD2DxBG,EAAuB,SAACvB,EAAWlC,GAC5C,OAAO,SAAAqD,GACHA,ECgC4B,CAChCC,KA7F0B,mBD6DtB,IAAME,EAAOlD,EAAY6B,cAAcD,EAAWlC,GAC/B,2BAAhBwD,EAAKrC,OACJkC,ECiCqC,CAC7CC,KAhGkC,yBAiGlC/B,SDnCsCiC,EAAKjC,WAEnC8B,ECoC8B,CACtCC,KApGiC,4BCR/BI,6MACFC,MAAQ,CACJ/D,SAAU,GACVC,SAAU,GACVoB,OAAQ,MAOZ2C,aAAe,SAAAC,GACXrD,EAAKsD,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GACKmD,EAAEG,OAAOhE,GAAK6D,EAAEG,OAAOC,WAIhCC,aAAe,SAAAL,GACXA,EAAEM,iBADc,IAAAC,EAGe5D,EAAKmD,MAA5B/D,EAHQwE,EAGRxE,SAAUC,EAHFuE,EAGEvE,SAClB,GAAGD,GAAYC,EACXW,EAAKsD,SAAS,CAAC7C,OAAQ,KACvBT,EAAK/B,MAAM4F,aAAa,CAACzE,WAAUC,iBAEnC,CACA,IAAMoB,EAAS,GACXrB,GAAUqB,EAAOC,KAAK,2BACtBrB,GAAUoB,EAAOC,KAAK,2BAC1BV,EAAKsD,SAAS,CAAC7C,gGArBnBR,KAAKhC,MAAM2E,sDAyBN,IACGkB,EAAS7D,KAAKhC,MAAd6F,KACR,IAAIA,EAAKC,QAAS,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAFjC,IAAAC,EAGkCjE,KAAKkD,MAApC/D,EAHH8E,EAGG9E,SAAUC,EAHb6E,EAGa7E,SAAUoB,EAHvByD,EAGuBzD,OACtB0D,EAAcL,EAAKM,UAAUjD,IAAI,SAACG,EAAO+C,GAAR,OAAcnG,EAAAC,EAAAC,cAACkG,EAAD,CAAcC,IAAKF,EAAG9F,QAAS+C,MAC9EkD,EAAa/D,EAAOU,IAAI,SAACG,EAAO+C,GAAR,OAAcnG,EAAAC,EAAAC,cAACkG,EAAD,CAAcC,IAAKF,EAAG9F,QAAS+C,MAE3E,OACIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMqG,SAAUxE,KAAKyD,cAChBS,EACAK,EACDtG,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,YAAf,YACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOW,MAAOrE,EAAUI,GAAG,WAAWmF,SAAU1E,KAAKmD,eACjElF,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,YAAf,YACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,WAAWW,MAAOpE,EAAUG,GAAG,WAAWmF,SAAU1E,KAAKmD,eACrElF,EAAAC,EAAAC,cAAA,uBAPJ,IAO2BF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMtG,MAAO,GAAI2F,GAAG,aAApB,wBAlDAY,aA6DLC,cAJS,SAAA3B,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,OAGwB,CAAED,aFvCd,SAAAxD,GACxB,OAAO,SAAAwC,GACHA,ECKoB,CACxBC,KAtCiB,UDiCb,ICQqB/B,EAAUD,EAAOF,EDRhCoC,EAAOlD,EAAYe,MAAMR,GACZ,kBAAhB2C,EAAKrC,OACJkC,GCMiB9B,EDNKiC,EAAKjC,SCMAD,EDNUkC,EAAKlC,MCMRF,EDNeoC,EAAKpC,ICMX,CACnDkC,KAzCyB,gBA0CzB/B,WACAD,QACAF,SDRQiC,ECW0B,CAClCC,KA/CwB,eAgDxBrC,ODb6BuC,EAAKvC,WEgCkBmC,sBAAzCkC,CAA+D5B,GC9D/DlF,EARM,SAACC,GACrB,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUC,MAAOA,GAC7BL,EAAMM,SAAW,YAOhBD,EAAQ,CACVE,MAAO,OACPC,OAAQ,OACRC,gBAAiB,UACjBC,OAAQ,oBACRC,MAAO,UACPC,aAAc,MACdC,QAAS,OACTC,OAAQ,SACRC,WAAY,OACZC,SAAU,OACVC,UAAW,cCXT6F,6MACF5B,MAAQ,CACJ/D,SAAU,GACVC,SAAU,GACVmB,eAAgB,GAChBC,OAAQ,MAOZ2C,aAAe,SAAAC,GACXrD,EAAKsD,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GACKmD,EAAEG,OAAOhE,GAAK6D,EAAEG,OAAOC,WAIhCC,aAAe,SAAAL,GACXA,EAAEM,iBADc,IAAAC,EAE+B5D,EAAKmD,MAA5C/D,EAFQwE,EAERxE,SAAUC,EAFFuE,EAEEvE,SAAUmB,EAFZoD,EAEYpD,eAC5B,GAAGpB,GAAYC,GAAYmB,GAAkBnB,IAAamB,EACtDR,EAAKsD,SAAS,CAAC7C,OAAQ,GAAIrB,SAAU,GAAIC,SAAU,GAAImB,eAAgB,KACvER,EAAK/B,MAAM+G,gBAAgB,CAAC5F,WAAUC,WAAUmB,uBAEhD,CACA,IAAMC,EAAS,GACXrB,GAAUqB,EAAOC,KAAK,2BACtBrB,GAAUoB,EAAOC,KAAK,2BACtBF,GAAgBC,EAAOC,KAAK,kCAC7BrB,IAAamB,GAAgBC,EAAOC,KAAK,0BAC5CV,EAAKsD,SAAS,CAAC7C,gGAtBnBR,KAAKhC,MAAM2E,sDA0BN,IAAAqC,EAAAhF,KACG6D,EAAS7D,KAAKhC,MAAd6F,KACR,IAAIA,EAAKC,QAAS,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAFjC,IAAAC,EAIkDjE,KAAKkD,MAApD/D,EAJH8E,EAIG9E,SAAUC,EAJb6E,EAIa7E,SAAUmB,EAJvB0D,EAIuB1D,eAAgBC,EAJvCyD,EAIuCzD,OACtCyE,EAAiBpB,EAAKqB,UAAUhE,IAAI,SAACG,EAAO+C,GAAR,OAAcnG,EAAAC,EAAAC,cAACkG,EAAD,CAAcC,IAAKF,EAAG9F,QAAS+C,MACjFkD,EAAa/D,EAAOU,IAAI,SAACG,EAAO+C,GAAR,OAAcnG,EAAAC,EAAAC,cAACkG,EAAD,CAAcC,IAAKF,EAAG9F,QAAS+C,MAE3E,OACIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMqG,SAAU,SAACpB,GAAD,OAAO4B,EAAKvB,aAAaL,KACpCS,EAAKsB,OAASlH,EAAAC,EAAAC,cAACiH,EAAD,CAAS9G,QAASuF,EAAKsB,SAAY,GACjDF,EACAV,EACDtG,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,YAAf,YACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOW,MAAOrE,EAAUI,GAAG,WAAWmF,SAAU1E,KAAKmD,eACjElF,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,YAAf,YACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,WAAWW,MAAOpE,EAAUG,GAAG,WAAWmF,SAAU1E,KAAKmD,eACrElF,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,kBAAf,mBACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,WAAWW,MAAOjD,EAAgBhB,GAAG,iBAAiBmF,SAAU1E,KAAKmD,eACjFlF,EAAAC,EAAAC,cAAA,0BAVJ,IAU8BF,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMtG,MAAO,GAAI2F,GAAG,UAApB,qBAxDGY,aAmERC,cAJS,SAAA3B,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,OAGwB,CAAEkB,gBJxDX,SAAA3E,GAC3B,OAAO,SAAAwC,GACHA,ECAuB,CAC3BC,KA1BoB,aD0BhB,IAAME,EAAOlD,EAAYM,SAASC,GACf,qBAAhB2C,EAAKrC,OAA+BkC,ECER,CACnCC,KA7B4B,mBA8B5BlC,IDJoEoC,EAAKpC,MAChEiC,ECM8B,CACvCC,KAjC2B,kBAkC3BrC,ODRiCuC,EAAKvC,QAAU,OImDOmC,sBAA5CkC,CAAkEC,GCtDpEO,EAA2B,SAAA9F,GAAE,OAAI,SAAAqD,GAAQ,OAAIA,ECiB1B,SAAArD,GAAE,MAAK,CACnCsD,KAtC4B,mBAuC5BtD,MDnB+D+F,CAAiB/F,MAEvEgG,EAA2B,SAAAhG,GAAE,OAAI,SAAAqD,GAAQ,OAAIA,ECqB1B,SAAArD,GAAE,MAAK,CACnCsD,KA3C4B,mBA4C5BtD,MDvB+DiG,CAAiBjG,MAEvEkG,EAAiB,SAAAlG,GAAE,OAAI,SAAAqD,GAAQ,OAAIA,ECOlB,SAAArD,GAAE,MAAK,CACjCsD,KAjC4B,mBAkC5BtD,MDTqDmG,CAAenG,MErBlEoG,6MACFzC,MAAQ,CACJvD,SAAU,KAGdiG,gBAAkB,WACX7F,EAAK/B,MAAM6F,KAAKC,QAAS/D,EAAK/B,MAAM6H,QAAQpF,KAAK,UAE7CV,EAAK/B,MAAM+E,KAAKpD,UACnBI,EAAK/B,MAAM8H,UAAU/F,EAAK/B,MAAM+E,KAAKxD,GAAIQ,EAAKmD,MAAMvD,mFAInD,IAAAoG,EACwC/F,KAAKhC,MAAM+E,KAAhDtD,EADHsG,EACGtG,KAAMC,EADTqG,EACSrG,MAAOC,EADhBoG,EACgBpG,SAAUJ,EAD1BwG,EAC0BxG,GAAIK,EAD9BmG,EAC8BnG,MAC7BoG,EAAShG,KAAKhC,MAAMiE,UAAU5B,KAAK,SAAAmB,GAAI,OAAIA,EAAKjC,KAAOA,IAC7D,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAK8H,IAAG,YAAA1D,OAAc7C,EAAd,QAA2BwG,IAAI,KACvCjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBqB,GAC/BxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBwB,EAAhC,UACA3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,kBAAkDuB,GACjDA,EAAW,EAAI1B,EAAAC,EAAAC,cAAA,UAAQgI,SAAUH,IAAWrG,EAAUyG,QAASpG,KAAK4F,iBAAkBI,EAAS,gBAAkB,eAA0B/H,EAAAC,EAAAC,cAAA,UAAQgI,UAAQ,GAAhB,yBAvB1IvB,aAmCPyB,cAAWxB,YALF,SAAA3B,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,KACZ5B,UAAWiB,EAAM1D,SAASyC,YAGqB,CAAE6D,UFpB5B,SAACvG,EAAII,GAAL,OAAmB,SAAAiD,GAAQ,OAAIA,ECM/B,SAACrD,EAAII,GAAL,MAAmB,CACxCkD,KA3BuB,cA4BvBlD,WACAJ,MDT6D+G,CAAU/G,EAAII,OEoBrDkF,CAAwCc,ICpC5DY,mLAEE,GAAGvG,KAAKhC,MAAMwI,QACV,OAAOvI,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACoI,UAAW,WAAWxI,EAAAC,EAAAC,cAAA,OAAK8H,IAAI,uBAAuBC,IAAI,MAClF,GAAGlG,KAAKhC,MAAMqD,MACV,OAAOpD,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACoI,UAAW,WAAWxI,EAAAC,EAAAC,cAAA,UAAK6B,KAAKhC,MAAMqD,QAE9D,IAAMqF,EAAc1G,KAAKhC,MAAM0I,YAAYxF,IAAI,SAAAiB,GAC3C,OAAOlE,EAAAC,EAAAC,cAACwI,EAAD,CAASrC,IAAKnC,EAAQ5C,GAAIwD,KAAMZ,MAG3C,OACIlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVsI,UAbS9B,aAwBXyB,cAAWxB,YALF,SAAA3B,GAAK,MAAK,CAC9BsD,QAAStD,EAAM1D,SAASgH,QACxBnF,MAAO6B,EAAM1D,SAAS6B,QAGAwD,CAAyB0B,ICrB7CK,8LAEE5G,KAAKhC,MAAM6I,+CAGN,IACGrH,EAAaQ,KAAKhC,MAAlBwB,SACAsH,EAAS9G,KAAKhC,MAAM+I,MAApBD,KACR,OACI7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAc,MAAT2I,EAAe,gBAAkB,YACtC7I,EAAAC,EAAAC,cAAC6I,EAAD,CAAaN,YAAsB,MAATI,EAAetH,EAASyH,MAAM,EAAG,GAAKzH,YAXzDoF,aAsBRyB,cAAWxB,YALF,SAAA3B,GAAK,MAAK,CAC9B1D,SAAU0D,EAAM1D,SAASA,SACzByC,UAAWiB,EAAM1D,SAASyC,YAGqB,CAAE4E,YJhB1B,WACvB,OAAO,SAAAjE,GACHA,ECJ0B,CAC9BC,KAfwB,iBDmBpBD,ECDuC,CAC3CC,KAlBgC,uBAmBhCrD,SDDgCK,EAAYL,cIatBqF,CAA0C+B,ICArDM,mLA7BF,IAAAnH,EAAAC,KAAA+F,EACsD/F,KAAKhC,MAAM+E,KAA9DtD,EADHsG,EACGtG,KAAMC,EADTqG,EACSrG,MAAOC,EADhBoG,EACgBpG,SAAUyC,EAD1B2D,EAC0B3D,aAAc7C,EADxCwG,EACwCxG,GAAIK,EAD5CmG,EAC4CnG,MACjD,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAK8H,IAAG,YAAA1D,OAAc7C,EAAd,QAA2BwG,IAAI,MAE3CjI,EAAAC,EAAAC,cAAA,OAAMC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,UAAKsB,IACnCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,0BAAlC,KAAyDwB,EAAzD,KAAoE1B,EAAAC,EAAAC,cAAA,kBAApE,KAAmFyB,EAAnF,WACA3B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,sCAAmEgE,EAAnE,KAAkFnE,EAAAC,EAAAC,cAAA,oBAAlF,IAAkGiE,EAAexC,EAAjH,UACCI,KAAKhC,MAAMmJ,mBAAqB,GAC7BlJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkJ,SAAA,KACInJ,EAAAC,EAAAC,cAAA,UAAQiI,QAAS,WAAUzG,EAAWyC,GAAcrC,EAAK/B,MAAMqJ,UAAU9H,KAAzE,eACAtB,EAAAC,EAAAC,cAAA,UAAQiI,QAAS,WACO,IAAjBhE,EAAoBrC,EAAK/B,MAAMsJ,OAAO/H,GACpCQ,EAAK/B,MAAMuJ,UAAUhI,KAF9B,kBAIAtB,EAAAC,EAAAC,cAAA,UAAQiI,QAAS,kBAAMrG,EAAK/B,MAAMsJ,OAAO/H,KAAzC,yBApBTqF,aCWjB4C,mLACO,IAAAzH,EAAAC,KACGiC,EAAcjC,KAAKhC,MAAnBiE,UACFwF,EAAQxF,EAAUf,IAAI,SAACM,GAAD,OACxBvD,EAAAC,EAAAC,cAACuJ,EAAD,CACIpD,IAAK9C,EAAKjC,GACVwD,KAAMvB,EACN6F,UAAWtH,EAAK/B,MAAMqJ,UACtBE,UAAWxH,EAAK/B,MAAMuJ,UACtBD,OAAQvH,EAAK/B,MAAMyH,mBAIvBkC,EAAQ,EAKZ,OAJA1F,EAAUC,QAAQ,SAAAV,GACdmG,GAASnG,EAAKY,aAAeZ,EAAK5B,QAIlC3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACVqJ,EAAMxG,OAAS,EAAIwG,EAAQxJ,EAAAC,EAAAC,cAAA,6CAC5BF,EAAAC,EAAAC,cAAA,oBAAYwJ,EAAZ,UACCF,EAAMxG,OAAS,EAAIhD,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMvG,UAAU,iBAAiB4F,GAAG,mBAApC,WAAuE,WAtBxFY,aAiCJC,cALS,SAAA3B,GAAK,MAAK,CAC9B1D,SAAU0D,EAAM1D,SAASA,SACzByC,UAAWiB,EAAM1D,SAASyC,YAGU,CAAEoF,YAAWE,YAAW9B,kBAAjDZ,CAAmE2C,GCZnEnB,cAAWxB,YAJF,SAAA3B,GAAK,MAAK,CAC9B3D,GAAI2D,EAAMW,KAAK/C,SAASvB,KAGuB,CAAEqI,iBZ+Dd,SAAArI,GAAE,OAAI,SAAAqD,GAAQ,OAAIA,ECgCrB,SAAArD,GAAE,MAAK,CACvCsD,KA7G8B,qBA8G9BtD,MDlC8DsI,CAAqBtI,OY/D7DsF,CA3BV,SAAA7G,GAAS,IAAA8J,EACkC9J,EAAMgD,QAArD+G,EADaD,EACbC,OAAQC,EADKF,EACLE,QAASC,EADJH,EACIG,KAAMC,EADVJ,EACUI,QAASC,EADnBL,EACmBK,OAAQ5I,EAD3BuI,EAC2BvI,GAChD,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUC,MAAOL,EAAMoK,OAAS,CAACC,YAAa,SAAW,IACpEpK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,YACc8J,EADd,KACyBD,EADzB,KACiCD,EADjC,IAC0C/J,EAAAC,EAAAC,cAAA,WAD1C,YACyD4J,EADzD,KACmEI,GAElEnK,EAAMsK,gBAAkB,GACrBrK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACVJ,EAAMuK,OAAStK,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,WAAWoC,QAAS,kBAAMpI,EAAMwK,WAAWjJ,KAApD,UAAyE,GACzFtB,EAAAC,EAAAC,cAAA,UAAQiI,QAAS,WACbpI,EAAM4J,iBAAiBrI,GACvBvB,EAAM6H,QAAQpF,KAAK,6BAFvB,QAIAxC,EAAAC,EAAAC,cAAA,UAAQiI,QAAS,WACbpI,EAAMyK,OAAOlJ,EAAIvB,EAAMuB,MAD3B,eCXdmJ,mLACO,IAAA3I,EAAAC,KACL,GAAGA,KAAKhC,MAAM6F,KAAKC,QAAS,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAD3C,IAMD2E,EAFItJ,EAAcW,KAAKhC,MAAM6F,KAAK/C,SAA9BzB,UACAuJ,EAAoB5I,KAAKhC,MAAM6F,KAA/B+E,gBAcR,OAXGvJ,IAAWsJ,EAAoBtJ,EAAU6B,IAAI,SAAAF,GAAO,OACnD/C,EAAAC,EAAAC,cAAC0K,EAAD,CACIvE,IAAKtD,EAAQzB,GACb6I,OAAQQ,IAAoB5H,EAAQzB,GACpCgJ,QAAQ,EACRvH,QAASA,EACTwH,WAAYzI,EAAK/B,MAAM8K,yBACvBL,OAAQ1I,EAAK/B,MAAMgF,0BAKvB/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACTiB,GAAkC,IAArBA,EAAU4B,OAA8C0H,EAA9B1K,EAAAC,EAAAC,cAAA,gCAD7C,IAC8FF,EAAAC,EAAAC,cAAA,WAC1FF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,wBAAT,2BAvBYY,aAiCbC,cAJS,SAAA3B,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,OAGwB,CAAEiF,yBbmDF,SAAAvJ,GAAE,OAAI,SAAAqD,GAAQ,OAAIA,EC6BzB,SAAArD,GAAE,MAAK,CACpCsD,KAxG+B,sBAyG/BtD,MD/B+DwJ,CAAkBxJ,ManDjByD,wBAArD6B,CAA6E6D,GC9BtFM,mLACO,IAAAjJ,EAAAC,KACL,GAAGA,KAAKhC,MAAM6F,KAAKC,QAAS,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAEhD,IAAM3E,EAAYW,KAAKhC,MAAM6F,KAAK/C,SAASzB,UAAU6B,IAAI,SAAAF,GACrD,OAAO/C,EAAAC,EAAAC,cAAC0K,EAAD,CAASvE,IAAKtD,EAAQzB,GAAIyB,QAASA,EAASyH,OAAQ1I,EAAK/B,MAAMgF,yBAG1E,OACI/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,uBAAe6B,KAAKhC,MAAM6F,KAAK/C,SAAS3B,UAD5C,mBAKJlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,wBAECkB,EAAU4B,OAAS,EAAI5B,EAAYpB,EAAAC,EAAAC,cAAA,wCACpCF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,wBAAT,kBAJJ,IAI0D/F,EAAAC,EAAAC,cAAA,WACtDF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,mBAAT,4BAtBEY,aAiCPC,cAJS,SAAA3B,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,OAGwB,CAAEf,uBAAsBE,wBAAjD6B,CAAyEmE,GClClFC,6MAEF/F,MAAQ,CACJ6E,OAAQ,GACRC,QAAS,GACTG,OAAQ,GACRF,KAAM,GACNC,QAAS,GACT7G,MAAO,QAOXoC,aAAe,SAAAL,GACXA,EAAEM,iBADc,IAAAC,EAEmC5D,EAAKmD,MAAhD6E,EAFQpE,EAERoE,OAAQC,EAFArE,EAEAqE,QAASG,EAFTxE,EAESwE,OAAQF,EAFjBtE,EAEiBsE,KAAMC,EAFvBvE,EAEuBuE,QACpCH,GAAUC,GAAWG,GAAUF,GAAQC,GACtCnI,EAAKsD,SAAS,CACV0E,OAAQ,GACRC,QAAS,GACTG,OAAQ,GACRF,KAAM,GACNC,QAAS,GACT7G,MAAO,OAEXtB,EAAK/B,MAAMkL,qBAAqB,CAACnB,SAAQC,UAASG,SAAQF,OAAMC,WAAUnI,EAAK/B,MAAMmL,SAGrFpJ,EAAKsD,SAAS,CAAChC,MAAO,mCAK9B+H,aAAe,SAAAhG,GACXrD,EAAKsD,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GAAgBmD,EAAEG,OAAOhE,GAAK6D,EAAEG,OAAOC,4FAxBvCxD,KAAKhC,MAAMqL,+CA2BN,IAAArE,EAAAhF,KAAAiE,EACqDjE,KAAKkD,MAAvD6E,EADH9D,EACG8D,OAAQC,EADX/D,EACW+D,QAASG,EADpBlE,EACoBkE,OAAQF,EAD5BhE,EAC4BgE,KAAMC,EADlCjE,EACkCiE,QAAS7G,EAD3C4C,EAC2C5C,MAD3CiI,EAEgCtJ,KAAKhC,MAAlCuL,EAFHD,EAEGC,aAAcC,EAFjBF,EAEiBE,WAEtB,OACIvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,QAAMqG,SAAUxE,KAAKyD,aAAcrF,UAAU,oBACxCiD,EAAQpD,EAAAC,EAAAC,cAACkG,EAAD,CAAc/F,QAAS+C,IAAW,GAC1CkI,EAAetL,EAAAC,EAAAC,cAACkG,EAAD,CAAc/F,QAASiL,IAAkB,GACxDC,EAAavL,EAAAC,EAAAC,cAACiH,EAAD,CAAS9G,QAASkL,IAAgB,GAChDvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,WAAf,iBACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,UAAUmF,SAAU1E,KAAKoJ,aAAc5F,MAAO0E,KAGxEjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,QAAf,QACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,OAAOmF,SAAU1E,KAAKoJ,aAAc5F,MAAOyE,KAGrEhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,WAAf,YACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,UAAUmF,SAAU1E,KAAKoJ,aAAc5F,MAAOwE,KAGxE/J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,UAAf,UACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,SAASmF,SAAU1E,KAAKoJ,aAAc5F,MAAOuE,KAGvE9J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,UAAf,aACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,SAASmF,SAAU1E,KAAKoJ,aAAc5F,MAAO2E,MAG3ElK,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQiI,QAAS,kBAAMpB,EAAKhH,MAAM6H,QAAQ4D,WAA1C,oBA5EK7E,aA2FVyB,cAAWxB,YARF,SAAA3B,GAAK,MAAK,CAC9BqG,aAAcrG,EAAMW,KAAK0F,aACzBC,WAAYtG,EAAMW,KAAK2F,WACvBL,OAAQjG,EAAMW,KAAK/C,SAASvB,KAKmB,CAAE2J,qBfpDjB,SAAClI,EAASzB,GAC1C,OAAO,SAAAqD,GACHA,EC2ByB,CAC7BC,KAtEuB,gBD2CnB,IAAME,EAAOlD,EAAYkB,WAAWC,EAASzB,GAC1B,wBAAhBwD,EAAKrC,OACJkC,EC4BkC,CAC1CC,KAzE+B,sBA0E/B/B,SD9BmCiC,EAAKjC,WAEhC8B,EC+B8B,CACtCC,KA7E8B,qBA8E9BxB,MDjCkC0B,EAAK1B,Ue6CgCgI,YAFvD,kBAAM,SAAAzG,GAAQ,OAAIA,EdrBL,CAC7BC,KAtEuB,mBc4FDgC,CAAgEoE,IC9E3EpE,cALS,SAAA3B,GAAK,MAAK,CAC9BY,QAASZ,EAAMW,KAAKC,QACpB4F,eAAgBxG,EAAM1D,SAASyC,UAAUhB,SAG9B4D,CArBC,SAAA7G,GAAS,IACb8F,EAA4B9F,EAA5B8F,QAAS4F,EAAmB1L,EAAnB0L,eACjB,OAAG5F,GAAW4F,GAAkB,EAAUzL,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAGnD/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,YAAf,eACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,aACtBtB,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,YAAT,eCCV2F,6MACFzG,MAAQ,CACJjB,UAAW,MAUf2H,iBAAmB,WACf,IAEM5H,EAAQ,CAAEhB,QAFAjB,EAAK/B,MAAMqB,UAAUwC,OAAO,SAAAb,GAAO,OAAIA,EAAQzB,KAAOQ,EAAK/B,MAAM4K,kBAAiB,GAEzE3G,UADHlC,EAAK/B,MAAnBiE,WAERlC,EAAK/B,MAAM6L,kBAAkB7H,EAAOjC,EAAK/B,MAAMmL,4FAV/CnJ,KAAKhC,MAAM8L,0BACX9J,KAAKqD,SAAS,CACVpB,UAAWjC,KAAKhC,MAAMiE,6CAWrB,IAAA+C,EAAAhF,KACL,IAAIA,KAAKhC,MAAMiE,YAAcjC,KAAKhC,MAAMqB,YAAcW,KAAKhC,MAAM4K,gBAC7D,OAAO3K,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAExB,GAAmC,IAAhChE,KAAKhC,MAAMiE,UAAUhB,SAAiBjB,KAAKhC,MAAM+L,gBAChD,OAAO9L,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,UAExB,IAAM/B,EAAYjC,KAAKkD,MAAMjB,UAAUf,IAAI,SAAAM,GAAI,OAC3CvD,EAAAC,EAAAC,cAACuJ,EAAD,CACIpD,IAAK9C,EAAKjC,GACVwD,KAAMvB,EACN6F,UAAWrC,EAAKhH,MAAMqJ,UACtBE,UAAWvC,EAAKhH,MAAMuJ,UACtBD,OAAQtC,EAAKhH,MAAMyH,eACnB0B,oBAAoB,MAItBnG,EAAUhB,KAAKhC,MAAMqB,UAAUwC,OAAO,SAAAb,GAAO,OAAIA,EAAQzB,KAAOyF,EAAKhH,MAAM4K,kBAAiB,GAClG,OACI3K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV4B,KAAKhC,MAAMgM,SAAW/L,EAAAC,EAAAC,cAACiH,EAAD,CAAS9G,QAAS0B,KAAKhC,MAAMgM,WAAc,GACjEhK,KAAKhC,MAAMiM,WAAahM,EAAAC,EAAAC,cAACkG,EAAD,CAAc/F,QAAS0B,KAAKhC,MAAMiM,aAAgB,GAC1EjK,KAAKhC,MAAMgM,SAAW,GAAK/L,EAAAC,EAAAC,cAAA,UAAQiI,QAASpG,KAAK4J,iBAAkBvL,MAAO,CAAC6L,aAAc,SAA9D,SAC5BjM,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAC0K,EAAD,CAAS7H,QAASA,EAASsH,iBAAiB,IAC5CrK,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAC6L,aAAc,UAA1B,UACCjI,EACAjC,KAAKhC,MAAMgM,SAAW,GAAK/L,EAAAC,EAAAC,cAAA,UAAQiI,QAASpG,KAAK4J,kBAAtB,iBA/CrBhF,aA+DRyB,cAAWxB,YAVF,SAAA3B,GAAK,MAAK,CAC9BjB,UAAWiB,EAAM1D,SAASyC,UAC1B5C,UAAW6D,EAAMW,KAAK/C,SAASzB,UAC/BuJ,gBAAiB1F,EAAMW,KAAK+E,gBAC5BmB,gBAAiB7G,EAAM1D,SACvBwK,SAAU9G,EAAM1D,SAASwK,SACzBC,WAAY/G,EAAM1D,SAASyK,WAC3Bd,OAAQjG,EAAMW,KAAK/C,SAASvB,KAGmB,CAAE8H,YAAWE,YAAW9B,iBAAgBoE,kBZ1C1D,SAAC7H,EAAOzC,GACrC,OAAO,SAAAqD,GACHA,ECgByB,CAC7BC,KAhDuB,gBDiCA,oBADNhD,EAAYkC,WAAWC,EAAOzC,GACnCmB,OACJkC,ECiB4B,CACpCC,KAnD+B,wBDmCvBD,ECmB2B,CACnCC,KAtD8B,yBWqE4EiH,wBZ/CvE,kBAAM,SAAAlH,GAAQ,OAAIA,ECmClB,CACnCC,KAzD8B,0BWoERgC,CAA+G8E,IClEnIQ,6MAEFjH,MAAQ,CACJ6E,OAAQ,GACRC,QAAS,GACTG,OAAQ,GACRF,KAAM,GACNC,QAAS,MAkBbzE,aAAe,SAAAL,GACXA,EAAEM,iBADc,IAAAC,EAEmC5D,EAAKmD,MAAhD6E,EAFQpE,EAERoE,OAAQC,EAFArE,EAEAqE,QAASG,EAFTxE,EAESwE,OAAQF,EAFjBtE,EAEiBsE,KAAMC,EAFvBvE,EAEuBuE,QACpCH,GAAUC,GAAWG,GAAUF,GAAQC,GACtCnI,EAAKsD,SAAS,CACV0E,OAAQ,GACRC,QAAS,GACTG,OAAQ,GACRF,KAAM,GACNC,QAAS,GACT7G,MAAO,OAEXtB,EAAK/B,MAAM8E,qBAAqB,CAACiF,SAAQC,UAASG,SAAQF,OAAMC,UAASzG,UAAW1B,EAAK/B,MAAMyD,WAAY1B,EAAK/B,MAAMuB,IACtHQ,EAAK/B,MAAM6H,QAAQ4D,UAGnB1J,EAAKsD,SAAS,CAAChC,MAAO,mCAK9B+H,aAAe,SAAAhG,GACXrD,EAAKsD,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GAAgBmD,EAAEG,OAAOhE,GAAK6D,EAAEG,OAAOC,4FArCxB,IAAAwB,EAAAhF,KACXA,KAAKhC,MAAMqB,WAAcW,KAAKhC,MAAMyD,WAAWzB,KAAKhC,MAAM6H,QAAQpF,KAAK,KAC3ET,KAAKhC,MAAMqL,cACX,IAAMrI,EAAUhB,KAAKhC,MAAMqB,UAAUgB,KAAK,SAAAW,GAAO,OAAIA,EAAQzB,KAAOyF,EAAKhH,MAAMyD,YACvEsG,EAA2C/G,EAA3C+G,OAAQC,EAAmChH,EAAnCgH,QAASG,EAA0BnH,EAA1BmH,OAAQF,EAAkBjH,EAAlBiH,KAAMC,EAAYlH,EAAZkH,QACvClI,KAAKqD,SAAS,CACV0E,SACAC,UACAG,SACAF,OACAC,UACA7G,MAAO,wCA6BN,IAAA4C,EACqDjE,KAAKkD,MAAvD6E,EADH9D,EACG8D,OAAQC,EADX/D,EACW+D,QAASG,EADpBlE,EACoBkE,OAAQF,EAD5BhE,EAC4BgE,KAAMC,EADlCjE,EACkCiE,QAAS7G,EAD3C4C,EAC2C5C,MAD3CiI,EAEyCtJ,KAAKhC,MAA3CuL,EAFHD,EAEGC,aAAcC,EAFjBF,EAEiBE,WAEtB,OAJKF,EAE6BxF,QAEf7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAG5B/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,QAAMqG,SAAUxE,KAAKyD,aAAcrF,UAAU,oBACxCiD,EAAQpD,EAAAC,EAAAC,cAACkG,EAAD,CAAc/F,QAAS+C,IAAW,GAC1CkI,EAAetL,EAAAC,EAAAC,cAACkG,EAAD,CAAc/F,QAASiL,IAAkB,GACxDC,EAAavL,EAAAC,EAAAC,cAACiH,EAAD,CAAS9G,QAASkL,IAAgB,GAChDvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,WAAf,iBACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,UAAUmF,SAAU1E,KAAKoJ,aAAc5F,MAAO0E,KAGxEjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,QAAf,QACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,OAAOmF,SAAU1E,KAAKoJ,aAAc5F,MAAOyE,KAGrEhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,WAAf,YACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,UAAUmF,SAAU1E,KAAKoJ,aAAc5F,MAAOwE,KAGxE/J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,UAAf,UACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,SAASmF,SAAU1E,KAAKoJ,aAAc5F,MAAOuE,KAGvE9J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,UAAf,aACAxG,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOtD,GAAG,SAASmF,SAAU1E,KAAKoJ,aAAc5F,MAAO2E,MAG3ElK,EAAAC,EAAAC,cAAA,yCAxFQyG,aAwGbyB,cAAWxB,YATF,SAAA3B,GAAK,MAAK,CAC9BzB,UAAWyB,EAAMW,KAAKuG,gBACtB/K,UAAW6D,EAAMW,KAAK/C,SAASzB,UAC/ByE,QAASZ,EAAMW,KAAKC,QACpBvE,GAAI2D,EAAMW,KAAK/C,SAASvB,KAKuB,CAAEuD,uBAAsBuG,YAFvD,kBAAM,SAAAzG,GAAQ,OAAIA,EjBnBF,CAChCC,KAlF0B,sBiBsGJgC,CAAgEsF,IC9F3EE,oLAnBF,IAAAtE,EACwC/F,KAAKhC,MAAM+E,KAAhDtD,EADHsG,EACGtG,KAAMC,EADTqG,EACSrG,MAAO0C,EADhB2D,EACgB3D,aAAcxC,EAD9BmG,EAC8BnG,MACnC,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAK8H,IAAG,YAAA1D,OAAc7C,EAAd,QAA2BwG,IAAI,MAE3CjI,EAAAC,EAAAC,cAAA,OAAMC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,UAAKsB,IACnCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,kBAAlC,KAAiDyB,EAAjD,UACA3B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,iBAA8CgE,EAA9C,KAA6DnE,EAAAC,EAAAC,cAAA,oBAA7D,IAA6EiE,EAAexC,EAA5F,oBAZAgF,aCyBT0F,GArBD,SAAAtM,GAEV2D,QAAQC,IAAI5D,EAAM+E,MAClB,IAAMd,EAAYjE,EAAM+E,KAAKd,UAAUf,IAAI,SAAAM,GAAI,OAAIvD,EAAAC,EAAAC,cAACoM,GAAD,CAAWjG,IAAK9C,EAAKjC,GAAIwD,KAAMvB,EAAM8G,iBAAiB,MACnGjG,EAAOrE,EAAM+E,KAAKV,KAAK4E,MAAM,EAAG,IAClCzD,EAAQ,EAIZ,OAHAxF,EAAM+E,KAAKd,UAAUC,QAAQ,SAAAV,GACzBgC,GAAShC,EAAK5B,MAAQ4B,EAAKY,eAG3BnE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,MAAOmM,IAAX,WACAvM,EAAAC,EAAAC,cAAC0K,EAAD,CAAS7H,QAAShD,EAAM+E,KAAK/B,QAASsH,iBAAiB,IACvDrK,EAAAC,EAAAC,cAAA,MAAIE,MAAOmM,IAAX,SACCvI,EACDhE,EAAAC,EAAAC,cAAA,aAAQkE,GALZ,IAK0BpE,EAAAC,EAAAC,cAAA,0BAAkBqF,EAAlB,UACtBvF,EAAAC,EAAAC,cAAA,aAONqM,GAAS,CACXN,aAAc,OCpBZO,+LAEEzK,KAAKhC,MAAM0M,qBAAqB1K,KAAKhC,MAAMuB,qCAI3C,IAAMD,EAASU,KAAKhC,MAAMsB,OAAO4B,IAAI,SAAAc,GAAK,OAAI/D,EAAAC,EAAAC,cAACwM,GAAD,CAAO5H,KAAMf,EAAOsC,IAAKtC,EAAMzC,OAC7E,OAAGS,KAAKhC,MAAM8F,QAAgB7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAGvC/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACVkB,EAAO2B,OAAS,EAAI3B,EAAS,kCAXzBsF,aAuBNyB,eAAWxB,YANF,SAAA3B,GAAK,MAAK,CAC9B5D,OAAQ4D,EAAMW,KAAK+G,WACnB9G,QAASZ,EAAMW,KAAKC,QACpBvE,GAAI2D,EAAMW,KAAK/C,SAASvB,KAGuB,CAAEmL,qBrBqDjB,SAAAnL,GAChC,OAAO,SAAAqD,GACH,IAAMG,EAAOlD,EAAYiC,UAAUvC,GACnCqD,EC8CgC,CACpCC,KAlH2B,kBAmH3BvD,ODhD2ByD,OqBxDL8B,CAAmD4F,KCE9DI,GAnBA,WACX,OACI5M,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KACI9F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,IAAIiE,UAAWnE,IACjC3I,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,YAAYiE,UAAWnE,IACzC3I,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,SAASiE,UAAW9H,IACtChF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,YAAYiE,UAAWjG,IACzC7G,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,QAAQiE,UAAWvD,IACrCvJ,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,kBAAkBiE,UAAWrC,IAC/CzK,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,WAAWiE,UAAW/B,IACxC/K,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,uBAAuBiE,UAAW9B,IACpDhL,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,0BAA0BiE,UAAWZ,IACvDlM,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,WAAWiE,UAAWC,IACxC/M,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,YAAYiE,UAAWpB,IACzC1L,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAO+G,OAAK,EAAChE,KAAK,kBAAkBiE,UAAWN,OCvBrDQ,8MAEFC,aAAe,SAAA9H,GACXA,EAAEM,iBACF3D,EAAK/B,MAAMmN,yFAIX,OACIlN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkJ,SAAA,KACInJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,SAAT,SACJ/F,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,YAAT,YACJ/F,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGiI,QAASpG,KAAKkL,aAAcE,KAAK,KAApC,mBAZQxG,aAkBbC,eAAQ,KAAM,CAAEsG,cvBoBF,kBAAM,SAAAvI,GAAQ,OAAIA,ECWlB,CACzBC,KAnDkB,csBmBPgC,CAAiCoG,ICbjCI,GATQ,WACnB,OACIpN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkJ,SAAA,KACInJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,UAAT,UACJ/F,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,aAAT,eCIVsH,+LAEEtL,KAAKhC,MAAMuN,0DAIX,OACItN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACV4B,KAAKhC,MAAM6F,KAAK2H,WACb,GACAvN,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,KAAT,SACJ/F,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMX,GAAG,aAAT,aACHhE,KAAKhC,MAAM6F,KAAKC,QAAU7F,EAAAC,EAAAC,cAACsN,GAAD,MAAoBxN,EAAAC,EAAAC,cAACuN,GAAD,QAI3DzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAnBVwG,aA6BNC,eAJS,SAAA3B,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,OAGwB,CAAE0H,uBzBzBJ,WAClC,OAAO,SAAA3I,GACHA,EC4C8B,CAClCC,KAvD8B,uBDW1BD,ECoDoC,CACxCC,KA9DqC,iCwB+B1BgC,CAAqDyG,ICrBrDK,oLAXP,OACI1N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACyN,GAAD,MACA3N,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC0N,GAAD,eANFjH,sCCuBZkH,GAAY,CACdhL,SAAU,CAAE3B,SAAU,MAAOE,UAAW,GAAIE,GAAI,GACnDuE,SAAS,EACT8E,gBAAiB,KACjBwB,gBAAiB,KACjBvJ,MAAO,KAGP2K,YAAY,EAGZrG,OAAQ,KACRD,UAAW,GAGX6G,OAAQ,KACR5H,UAAW,GAGXqF,WAAY,KACZD,aAAc,KAGdqB,WAAY,IAuKEoB,GApKK,WAA+B,IAA9B9I,EAA8B+I,UAAAhL,OAAA,QAAAiL,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAAWK,EAAWF,UAAAhL,OAAA,EAAAgL,UAAA,QAAAC,EAClD,OAAOC,EAAOtJ,MACb,I1BzDsB,W0B0DrB,OAAO5C,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECgC,UAAW,KAGb,I1B9D8B,mB0B+D7B,OAAOjF,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECiC,OAAQgH,EAAOxL,MAGjB,I1BnE6B,kB0BoE5B,OAAOV,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECgC,UAAWiH,EAAO3L,SAGpB,I1BxEmB,Q0ByElB,OAAOP,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECiB,UAAW,KAGb,I1B7E2B,gB0B+E1B,OADAkI,aAAaC,QAAQ,QAASH,EAAOtL,OAC9BZ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAEC6I,OAAQI,EAAOxL,IACfmD,SAAS,EACThD,SAAUqL,EAAOrL,SACjBD,MAAOsL,EAAOtL,QAGhB,I1BtF0B,e0BuFzB,OAAOZ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECiB,UAAWgI,EAAO3L,SAGpB,I1B3FoB,S0B8FnB,OADA6L,aAAaE,WAAW,SACjBtM,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECpC,SAAU,GACVgD,SAAS,IAIX,I1BpGgC,qB0BqG/B,OAAO7D,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECsI,YAAY,IAGd,I1BzGwC,6B0B0GvC,OAAOvL,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECsI,YAAY,EACZ1K,SAAUqL,EAAOrL,SACjBgD,SAAS,IAGX,I1BhHuC,4B0BiHtC,OAAO7D,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECsI,YAAY,IAGd,I1BrH0B,e0BsHzB,OAAOvL,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECiC,OAAQ,KACRD,UAAW,GACX6G,OAAQ,KACR5H,UAAW,KAGb,I1B7HyB,c0B8HxB,OAAOlE,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECsG,WAAY,KACZD,aAAc,OAGhB,I1BnIiC,sB0BoIhC,OAAOtJ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECpC,SAAUqL,EAAOrL,SACjB0I,WAAY,sBAGd,I1BzIgC,qB0B0I/B,OAAOvJ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECqG,aAAc4C,EAAO9K,OAAS,8BAGhC,I1B9I4B,iB0B+I3B,OAAOpB,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECsG,WAAY,KACZD,aAAc,OAGhB,I1BpJoC,yB0BqJnC,OAAOtJ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECpC,SAAUqL,EAAOrL,SACjB0I,WAAY,sBAGd,I1B1JmC,wB0B2JlC,OAAOvJ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECqG,aAAc,6BAGhB,I1B/J4B,iB0BgK3B,OAAOtJ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECsG,WAAY,KACZD,aAAc,OAGhB,I1BrKoC,yB0BsKnC,OAAOtJ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECpC,SAAUqL,EAAOrL,SACjB0I,WAAY,oBAGd,I1B3KmC,wB0B4KlC,OAAOvJ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECqG,aAAc,6BAGhB,I1BhLiC,sB0BiLhC,OAAOtJ,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAEC0F,gBAAiBuD,EAAO5M,KAG1B,I1BrLgC,qB0BsL/B,OAAOU,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAECkH,gBAAiB+B,EAAO5M,KAG1B,I1B1L6B,kB0B2L5B,OAAOU,OAAAmM,GAAA,EAAAnM,CAAA,GACHiD,EADJ,CAEC0H,WAAYuB,EAAO7M,SAGrB,QACC,OAAO4D,aCvMJ4I,GAAY,CACdtM,SAAU,GACVyC,UAAW,GACXuE,SAAS,EACTnF,MAAO,KACP0I,iBAAiB,EACjBC,SAAU,KACVC,WAAY,MA0HDuC,GAvHS,WAA+B,IAA9BtJ,EAA8B+I,UAAAhL,OAAA,QAAAiL,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAAWK,EAAWF,UAAAhL,OAAA,EAAAgL,UAAA,QAAAC,EACnD,OAAOC,EAAOtJ,MACV,ItB5BoB,esB6BhB,OAAO5C,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEI7B,MAAO,OAGf,ItBjC4B,uBsBkCxB,OAAOpB,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEIsD,SAAS,EACThH,SAAU2M,EAAO3M,WAGzB,ItBvC2B,sBsBwCvB,OAAOS,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEIsD,SAAS,EACTnF,MAAO8K,EAAO9K,QAGtB,ItB7CmB,csB6CnB,IACY9B,EAAiB4M,EAAjB5M,GAAII,EAAawM,EAAbxM,SACN8M,EAAYvJ,EAAM1D,SAASa,KAAK,SAAAmB,GAAI,OAAIA,EAAKjC,KAAOA,IACpDmN,EAAU,CACZnN,GAAIkN,EAAUlN,GACd6C,aAAczC,EACdA,SAAU8M,EAAU9M,SACpBD,MAAO+M,EAAU/M,MACjBD,KAAMgN,EAAUhN,KAChBG,MAAO6M,EAAU7M,OAGrB,OAAOK,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEIjB,UAAS,GAAAM,OAAAtC,OAAA0M,GAAA,EAAA1M,CAAMiD,EAAMjB,WAAZ,CAAuByK,MAGxC,ItB7DwB,mBsB8DpB,IAAME,EAAe1J,EAAMjB,UAAUJ,OAAO,SAAAL,GAAI,OAAIA,EAAKjC,KAAO4M,EAAO5M,KACvE,OAAOU,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEIjB,UAAW2K,IAInB,ItBpEwB,mBsBoEF,IACVrN,EAAO4M,EAAP5M,GACFsN,EAAc3J,EAAMjB,UAAUf,IAAI,SAAAM,GACpC,OAAGA,EAAKjC,KAAOA,GAAMiC,EAAKY,aAAeZ,EAAK7B,UAC1C6B,EAAKY,eACEZ,GAEJA,IAEX,OAAOvB,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEI1D,SAAUqN,IAIlB,ItBlFwB,mBsBkFF,IACVtN,EAAO4M,EAAP5M,GACFsN,EAAc3J,EAAMjB,UAAUf,IAAI,SAAAM,GACpC,OAAGA,EAAKjC,KAAOA,GAAMiC,EAAKY,aAAe,GACrCZ,EAAKY,eACEZ,GAEJA,IAEX,OAAOvB,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEI1D,SAAUqN,IAIlB,ItBhGmB,csBiGf,OAAO5M,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEI6G,iBAAiB,EACjBE,WAAY,KACZD,SAAU,OAGlB,ItBvG2B,sBsBwGvB,OAAO/J,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEI6G,iBAAiB,EACjB9H,UAAW,GACXzC,SAAU,GACVwK,SAAU,2BAGlB,ItB/G0B,qBsBgHtB,OAAO/J,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEI6G,iBAAiB,EACjBE,WAAY,+BAGpB,ItBrH0B,qBsBsHtB,OAAOhK,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEI+G,WAAY,KACZD,SAAU,OAGlB,ItB3HkB,asB4Hd,OAAO/J,OAAAmM,GAAA,EAAAnM,CAAA,GACAiD,EADP,CAEIjB,UAAW,KAGnB,QACI,OAAOiB,IClIJ4J,GALKC,2BAAgB,CAChClJ,KAAMmI,GACNxM,SAAUgN,uBCECQ,GANDC,aAAe,CACzBC,QAASJ,GACTK,WAAY,CAACC,MACbC,UAAU,ICKdC,IAASC,OACRtP,EAAAC,EAAAC,cAACqP,EAAA,EAAD,CAAUR,MAAOA,IAChB/O,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACC1G,EAAAC,EAAAC,cAACsP,GAAD,QAGFC,SAASC,eAAe","file":"static/js/main.5a7bfeb3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ErrorMessage = (props) => {\r\n\treturn (\r\n\t\t<div className=\"error-message\" style={style}>\r\n\t\t\t{ props.message || 'Error message' }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;\r\n\r\nconst style = {\r\n    width: '100%',\r\n    height: 'auto',\r\n    backgroundColor: 'rgb(255, 94, 94)',\r\n    border: '3px solid rgb(255, 34, 34)',\r\n    color: 'white',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    margin: '20px 0',\r\n    lineHeight: '20px',\r\n    fontSize: '18px',\r\n    wordBreak: 'break-word'\r\n}\r\n","const users = [\r\n    {\r\n        username: 'user1',\r\n        password: 'password',\r\n        addresses: [],\r\n        orders: [],\r\n        id: 1\r\n    },\r\n    {\r\n        username: 'user2',\r\n        password: 'password',\r\n        addresses: [],\r\n        orders: [],\r\n        id: 2\r\n    },\r\n    {\r\n        username: 'user3',\r\n        password: 'password',\r\n        addresses: [],\r\n        orders: [],\r\n        id: 3\r\n    },\r\n    {\r\n        username: '123',\r\n        password: '123',\r\n        addresses: [],\r\n        orders: [],\r\n        id: 4\r\n    },\r\n    \r\n];\r\n\r\nexport default users;","const products = [\r\n    {\r\n        id: 1,\r\n        name: 'RAM',\r\n        image: 'product1',\r\n        quantity: 203,\r\n        price: 140\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Processor',\r\n        image: 'product2',\r\n        quantity: 1,\r\n        price: 300\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Motherboard',\r\n        image: 'product3',\r\n        quantity: 26,\r\n        price: 120\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Monitor',\r\n        image: 'product4',\r\n        quantity: 86,\r\n        price: 200\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Case',\r\n        image: 'product5',\r\n        quantity: 13,\r\n        price: 70\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Cooler',\r\n        image: 'product6',\r\n        quantity: 36,\r\n        price: 50\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Laptop',\r\n        image: 'product7',\r\n        quantity: 248,\r\n        price: 700\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Mousepad',\r\n        image: 'product8',\r\n        quantity: 2,\r\n        price: 20\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Wooden hammer',\r\n        image: 'product9',\r\n        quantity: 48,\r\n        price: 999\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Microwave',\r\n        image: 'product10',\r\n        quantity: 726,\r\n        price: 210\r\n    },\r\n];\r\n\r\nexport default products;","//emulated db\r\nimport users from './constants/users';\r\nimport products from './constants/products';\r\n\r\nclass backend{ \r\n    constructor(){\r\n        this.users = users;\r\n        this.products = products;\r\n    }\r\n\r\n    register = creds => {\r\n        const { username } = this.users;\r\n        if(this.users.find(user => user.username === username) || creds.password !== creds.passwordRepeat)\r\n            return {\r\n                errors: ['Could not register user']\r\n            };\r\n        this.users.push({\r\n            username: creds.username,\r\n            password: creds.password,\r\n            addresses: [],\r\n            orders: []\r\n        });\r\n        return {\r\n            status: 'Register_success',\r\n            msg: 'New account created'\r\n        }\r\n    }\r\n\r\n    login = creds => {\r\n        const { password, username } = creds;\r\n        const user = this.users.find(user => user.username === username);\r\n        if(user && user.password === password) \r\n            return {\r\n                status: 'Login_success',\r\n                token: 'token',\r\n                msg: '',\r\n                userInfo: {\r\n                    username: user.username,\r\n                    addresses: user.addresses,\r\n                    id: user.id\r\n                }\r\n            }\r\n        return {\r\n            errors: ['Could not log user in']\r\n        }\r\n    }\r\n\r\n    addAddress = (address, id) => {\r\n        const user = this.users.find(user => user.id === id);\r\n        if(user && user.addresses.length < 5){\r\n            this.users.map(user => {\r\n                if(user.id === id){\r\n                    address.id = Math.random();\r\n                    user.addresses.push(address);\r\n                }\r\n                return user;\r\n            });\r\n\r\n            const user = this.users.find(user => user.id === id);\r\n\r\n            return {\r\n                userInfo: {\r\n                    username: user.username,\r\n                    addresses: user.addresses,\r\n                    id: user.id\r\n                },\r\n                status: 'Add_address_success'\r\n            }\r\n        }\r\n        return {\r\n            error: 'Could not add new address'\r\n        }\r\n    }\r\n\r\n    updateAddress = (address, id) => {\r\n        const user = this.users.find(user => user.id === id);\r\n        if(user){\r\n            const newAddresses = user.addresses.map(item => {\r\n                if(item.id === address.addressID){\r\n                    item = address;\r\n                    item.id = address.addressID\r\n                }\r\n                return item;\r\n            });\r\n\r\n            user.addresses = newAddresses;\r\n\r\n            this.users = this.users.map(item => {\r\n                if(item.id === user.id) return user;\r\n                return item;\r\n            });\r\n\r\n            return {\r\n                userInfo: {\r\n                    username: user.username,\r\n                    addresses: user.addresses,\r\n                    id: user.id\r\n                },\r\n                status: 'Update_address_success'\r\n            }\r\n        }\r\n        return {}\r\n    }\r\n\r\n    deleteAddress = (addressID, id) => {\r\n        console.log(addressID, id);\r\n        const user = this.users.find(user => user.id === id);\r\n        console.log(user);\r\n        if(user){\r\n            const newAddresses = user.addresses.filter(item => item.id !== addressID);\r\n\r\n            this.users.map(item => {\r\n                if(item.id === user.id) item.addresses = newAddresses;\r\n                return item;\r\n            });\r\n\r\n            console.log(this.users);\r\n\r\n            return {\r\n                userInfo: {\r\n                    username: user.username,\r\n                    addresses: user.addresses,\r\n                    id: user.id\r\n                },\r\n                status: 'Delete_address_success'\r\n            }\r\n        }\r\n        return {}\r\n    }\r\n\r\n    getOrders = id => {\r\n        const orders = this.users.find(user => user.id === id).orders;\r\n        return orders;\r\n    }\r\n\r\n    placeOrder = (order, id) => {\r\n        order.id = Math.random();\r\n        order.cartItems.forEach(item => {\r\n            this.products.map(product => {\r\n                if(product.id === item.id){\r\n                    product.quantity -= item.cartQuantity;\r\n                }\r\n                return product;\r\n            });\r\n        });\r\n        const date = new Date();\r\n        order.date = `${date.getDate()}-${date.getMonth()+1}-${date.getFullYear()}`;\r\n        order.id = Math.random();\r\n\r\n        this.users.map(user => {\r\n            if(user.id === id) user.orders.push(order);\r\n            return user;\r\n        });\r\n\r\n        return {\r\n            status: 'Order_confirmed'\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default new backend();","import {\r\n    register, registerSuccess, registerFailed,\r\n    login, loginSuccess, loginFailed,\r\n    logout,\r\n    checkIfLoggedIn, checkIfLoggedInFailed,\r\n    resetErrors,\r\n    addAddress, addAddressSuccess, addAddressFailed,\r\n    updateAddress, updateAddressSuccess, updateAddressFailed,\r\n    deleteAddress, deleteAddressSuccess, deleteAddressFailed,\r\n    makeAddressActive, setAddressIdToUpdate,\r\n    getUserOrders\r\n} from './action_creators/auth';\r\n\r\nimport fakeBackend from '../../fakeBackend';\r\n\r\nexport const action_checkIfLoggedIn = () => {\r\n    return dispatch => {\r\n        dispatch(checkIfLoggedIn());\r\n        dispatch(checkIfLoggedInFailed());  \r\n    }\r\n}\r\n\r\n//Register action\r\nexport const action_register = creds => {\r\n    return dispatch => {\r\n        dispatch(register());\r\n        const data = fakeBackend.register(creds);\r\n        if(data.status === 'Register_success') dispatch(registerSuccess(data.msg));\r\n        else dispatch(registerFailed(data.errors || []));\r\n    }\r\n}\r\n\r\n//Login action\r\nexport const action_login = creds => {\r\n    return dispatch => {\r\n        dispatch(login());\r\n        const data = fakeBackend.login(creds);\r\n        if(data.status === 'Login_success')\r\n            dispatch(loginSuccess(data.userInfo, data.token, data.msg));\r\n        else\r\n            dispatch(loginFailed(data.errors));\r\n    }\r\n}\r\n\r\n//Action for logging out a user\r\nexport const action_logout = () => dispatch => dispatch(logout());\r\n\r\n//Action for reseting all the errors on authReducer\r\nexport const action_resetErrors = () => dispatch => dispatch(resetErrors());\r\n\r\n//Add new address action\r\nexport const action_addNewAddress = (address, id) => {\r\n    return dispatch => {\r\n        dispatch(addAddress());\r\n        const data = fakeBackend.addAddress(address, id);\r\n        if(data.status === 'Add_address_success')\r\n            dispatch(addAddressSuccess(data.userInfo));                 \r\n        else\r\n            dispatch(addAddressFailed(data.error));    \r\n    }\r\n}\r\n\r\n//Update address action\r\nexport const action_updateAddress = (address, id) => {\r\n    return dispatch => {\r\n        dispatch(updateAddress());\r\n        const data = fakeBackend.updateAddress(address,id);\r\n        if(data.status === 'Update_address_success')\r\n            dispatch(updateAddressSuccess(data.userInfo));                 \r\n        else\r\n            dispatch(updateAddressFailed());  \r\n    }\r\n}\r\n\r\n//Delete address action\r\nexport const action_deleteAddress = (addressID, id) => {\r\n    return dispatch => {\r\n        dispatch(deleteAddress());\r\n        const data = fakeBackend.deleteAddress(addressID, id);\r\n        if(data.status === 'Delete_address_success')\r\n            dispatch(deleteAddressSuccess(data.userInfo));                 \r\n        else\r\n            dispatch(deleteAddressFailed()); \r\n    }\r\n}\r\n\r\nexport const action_getUserOrders = id => {\r\n    return dispatch => {\r\n        const data = fakeBackend.getOrders(id);\r\n        dispatch(getUserOrders(data));\r\n    }\r\n}\r\n\r\n//Sets activeAddressID in reducer to the id parameter\r\nexport const action_makeAddressActive = id => dispatch => dispatch(makeAddressActive(id));\r\n\r\n//Sets updateAddressID in reducer to the id parameter\r\nexport const action_setUpdateAddress = id => dispatch => dispatch(setAddressIdToUpdate(id));","export const REGISTER = 'REGISTER';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILED = 'REGISTER_FAILED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CHECK_IF_LOGGED_IN = 'CHECK_IF_LOGGED_IN';\r\nexport const CHECK_IF_LOGGED_IN_SUCCESS = 'CHECK_IF_LOGGED_IN_SUCCESS';\r\nexport const CHECK_IF_LOGGED_IN_FAILED = 'CHECK_IF_LOGGED_IN_FAILED';\r\nexport const RESET_ERRORS = 'RESET_ERRORS';\r\nexport const ADD_ADDRESS = 'ADD_ADDRESS';\r\nexport const ADD_ADDRESS_SUCCESS = 'ADD_ADDRESS_SUCCESS';\r\nexport const ADD_ADDRESS_FAILED = 'ADD_ADDRESS_FAILED';\r\nexport const UPDATE_ADDRESS = 'UPDATE_ADDRESS';\r\nexport const UPDATE_ADDRESS_SUCCESS = 'UPDATE_ADDRESS_SUCCESS';\r\nexport const UPDATE_ADDRESS_FAILED = 'UPDATE_ADDRESS_FAILED';\r\nexport const DELETE_ADDRESS = 'DELETE_ADDRESS';\r\nexport const DELETE_ADDRESS_SUCCESS = 'DELETE_ADDRESS_SUCCESS';\r\nexport const DELETE_ADDRESS_FAILED = 'DELETE_ADDRESS_FAILED';\r\nexport const MAKE_ADDRESS_ACTIVE = 'MAKE_ADDRESS_ACTIVE';\r\nexport const SET_UPDATE_ADDRESS = 'SET_UPDATE_ADDRESS';\r\nexport const GET_USER_ORDERS = 'GET_USER_ORDERS';\r\n\r\n//Actions for registering a user\r\nexport const register = () => ({\r\n    type: REGISTER\r\n});\r\n\r\nexport const registerSuccess = msg => ({\r\n    type: REGISTER_SUCCESS,\r\n    msg\r\n});\r\n\r\nexport const registerFailed = (errors) => ({\r\n    type: REGISTER_FAILED,\r\n    errors\r\n});\r\n\r\n//Actions for logging user in\r\nexport const login = () => ({\r\n    type: LOGIN\r\n});\r\n\r\nexport const loginSuccess = (userInfo, token ,msg) => ({\r\n    type: LOGIN_SUCCESS,\r\n    userInfo,\r\n    token,\r\n    msg\r\n});\r\n\r\nexport const loginFailed = errors => ({\r\n    type: LOGIN_FAILED,\r\n    errors\r\n});\r\n\r\nexport const logout = () => ({\r\n    type: LOGOUT\r\n});\r\n\r\n//Actions for checking if user is logged in already\r\nexport const checkIfLoggedIn = () => ({\r\n    type: CHECK_IF_LOGGED_IN\r\n});\r\n\r\nexport const checkIfLoggedInSuccess = userInfo => ({\r\n    type: CHECK_IF_LOGGED_IN_SUCCESS,\r\n    userInfo\r\n});\r\n\r\nexport const checkIfLoggedInFailed = () => ({\r\n    type: CHECK_IF_LOGGED_IN_FAILED\r\n});\r\n\r\n//Action for reseting all errors\r\nexport const resetErrors = () => ({\r\n    type: RESET_ERRORS\r\n});\r\n\r\n//Actions for adding an address\r\nexport const addAddress = () => ({\r\n    type: ADD_ADDRESS\r\n});\r\n\r\nexport const addAddressSuccess = userInfo => ({\r\n    type: ADD_ADDRESS_SUCCESS,\r\n    userInfo\r\n});\r\n\r\nexport const addAddressFailed = error => ({\r\n    type: ADD_ADDRESS_FAILED,\r\n    error\r\n});\r\n\r\n//Actions for updating an address\r\nexport const updateAddress = () => ({\r\n    type: UPDATE_ADDRESS\r\n});\r\n\r\nexport const updateAddressSuccess = userInfo => ({\r\n    type: UPDATE_ADDRESS_SUCCESS,\r\n    userInfo\r\n});\r\n\r\nexport const updateAddressFailed = () => ({\r\n    type: UPDATE_ADDRESS_FAILED\r\n});\r\n\r\n//Actions for deleting an address\r\nexport const deleteAddress = () => ({\r\n    type: DELETE_ADDRESS\r\n});\r\n\r\nexport const deleteAddressSuccess = userInfo => ({\r\n    type: DELETE_ADDRESS_SUCCESS,\r\n    userInfo\r\n});\r\n\r\nexport const deleteAddressFailed = () => ({\r\n    type: DELETE_ADDRESS_FAILED\r\n});\r\n\r\n//Action for setting activeAddressID in authReducer.js\r\nexport const makeAddressActive = id => ({\r\n    type: MAKE_ADDRESS_ACTIVE,\r\n    id\r\n});\r\n\r\n//Action for setting updateAddressID in authReducer.js\r\nexport const setAddressIdToUpdate = id => ({\r\n    type: SET_UPDATE_ADDRESS,\r\n    id\r\n});\r\n\r\n//Action for getting a users orders\r\nexport const getUserOrders = orders => ({\r\n    type: GET_USER_ORDERS,\r\n    orders\r\n});\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport ErrorMessage from '../layout/ErrorMessage';\r\n\r\n//Actions\r\nimport { action_login } from '../../store/actions/authActions';\r\nimport { action_resetErrors } from '../../store/actions/authActions';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        errors: []\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.props.action_resetErrors();\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const { username, password } = this.state;\r\n        if(username && password){            \r\n            this.setState({errors: []});\r\n            this.props.action_login({username, password});\r\n        }\r\n        else{\r\n            const errors = [];\r\n            if(!username) errors.push('Username field is empty');\r\n            if(!password) errors.push('Password field is empty');    \r\n            this.setState({errors});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.isEmpty) return <Redirect to=\"/\"/>        \r\n        const { username, password, errors } = this.state;\r\n        const loginErrors = auth.logErrors.map((error, i) => <ErrorMessage key={i} message={error}/>);\r\n        const formErrors = errors.map((error, i) => <ErrorMessage key={i} message={error}/>);\r\n\r\n        return (\r\n            <div className=\"auth-form\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {loginErrors}\r\n                    {formErrors}\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input type=\"text\" value={username} id=\"username\" onChange={this.handleChange}/>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" value={password} id=\"password\" onChange={this.handleChange}/>\r\n                    <button>Login</button> <br/>\r\n                    <Link style={{}} to=\"/register\">Or register</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { action_login, action_resetErrors })(Login);","import React from 'react';\r\n\r\nconst ErrorMessage = (props) => {\r\n\treturn (\r\n\t\t<div className=\"message\" style={style}>\r\n\t\t\t{ props.message || 'Message' }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;\r\n\r\nconst style = {\r\n    width: '100%',\r\n    height: 'auto',\r\n    backgroundColor: '#82f927',\r\n    border: '3px solid #1c8223',\r\n    color: '#1c8223',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    margin: '20px 0',\r\n    lineHeight: '20px',\r\n    fontSize: '18px',\r\n    wordBreak: 'break-word'\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport Message from '../layout/Message';\r\nimport ErrorMessage from '../layout/ErrorMessage';\r\n\r\n//Actions\r\nimport { action_register } from '../../store/actions/authActions';\r\nimport { action_resetErrors } from '../../store/actions/authActions';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        passwordRepeat: '',\r\n        errors: []\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.props.action_resetErrors();\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();        \r\n        const { username, password, passwordRepeat } = this.state;\r\n        if(username && password && passwordRepeat && password === passwordRepeat){            \r\n            this.setState({errors: [], username: '', password: '', passwordRepeat: ''});\r\n            this.props.action_register({username, password, passwordRepeat});\r\n        }\r\n        else{\r\n            const errors = [];\r\n            if(!username) errors.push('Username field is empty');\r\n            if(!password) errors.push('Password field is empty');\r\n            if(!passwordRepeat) errors.push('Repeat password field is empty');\r\n            if(password !== passwordRepeat) errors.push('Passwords do not match');    \r\n            this.setState({errors});\r\n        }        \r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.isEmpty) return <Redirect to=\"/\"/>\r\n        \r\n        const { username, password, passwordRepeat, errors } = this.state;\r\n        const registerErrors = auth.regErrors.map((error, i) => <ErrorMessage key={i} message={error}/>);\r\n        const formErrors = errors.map((error, i) => <ErrorMessage key={i} message={error}/>);\r\n        \r\n        return (\r\n            <div className=\"auth-form\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                    {auth.regMsg ? <Message message={auth.regMsg}/> : ''}\r\n                    {registerErrors}\r\n                    {formErrors}\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input type=\"text\" value={username} id=\"username\" onChange={this.handleChange}/>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" value={password} id=\"password\" onChange={this.handleChange}/>\r\n                    <label htmlFor=\"passwordRepeat\">Repeat password</label>\r\n                    <input type=\"password\" value={passwordRepeat} id=\"passwordRepeat\" onChange={this.handleChange}/>\r\n                    <button>Register</button> <br/>\r\n                    <Link style={{}} to=\"/login\">Or login</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { action_register, action_resetErrors })(Register);","import { \r\n    getProducts,\r\n    getProductsSuccess,\r\n    addToCart,\r\n    removeFromCart,\r\n    incrementProduct,\r\n    decrementProduct,\r\n    placeOrder,\r\n    placeOrderSuccess,\r\n    placeOrderFailed,\r\n    resetOrderErrors\r\n} from './action_creators/products';\r\n\r\nimport fakeBackend from '../../fakeBackend';\r\n\r\n//Gets products from server\r\nexport const GetProducts = () => {\r\n    return dispatch => {\r\n        dispatch(getProducts());\r\n        dispatch(getProductsSuccess(fakeBackend.products));\r\n    }\r\n}\r\n//Adds product to cart\r\nexport const AddToCart = (id, quantity) => (dispatch => dispatch(addToCart(id, quantity)));\r\n//Increments product quantity in cart\r\nexport const incrementProductQuantity = id => dispatch => dispatch(incrementProduct(id));\r\n//Decrements product quantity in cart\r\nexport const decrementProductQuantity = id => dispatch => dispatch(decrementProduct(id));\r\n//Removes product from cart\r\nexport const RemoveFromCart = id => dispatch => dispatch(removeFromCart(id));\r\n//Resets all order messages and errors\r\nexport const action_resetOrderErrors = () => dispatch => dispatch(resetOrderErrors());\r\n\r\nexport const action_EmptyCart = () => dispatch => dispatch(resetOrderErrors());\r\n\r\n//Sends order data to server\r\nexport const action_placeOrder = (order, id) => {\r\n    return dispatch => {\r\n        dispatch(placeOrder());\r\n        const data = fakeBackend.placeOrder(order, id);\r\n        if(data.status === 'Order_confirmed')\r\n            dispatch(placeOrderSuccess());\r\n        else\r\n            dispatch(placeOrderFailed());\r\n    }\r\n}","export const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\nexport const GET_PRODUCTS_FAILED = 'GET_PRODUCTS_FAILED';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const INCRMENT_PRODUCT = 'INCRMENT_PRODUCT';\r\nexport const DECRMENT_PRODUCT = 'DECRMENT_PRODUCT';\r\nexport const PLACE_ORDER = 'PLACE_ORDER';\r\nexport const PLACE_ORDER_SUCCESS = 'PLACE_ORDER_SUCCESS';\r\nexport const PLACE_ORDER_FAILED = 'PLACE_ORDER_FAILED';\r\nexport const RESET_ORDER_ERRORS = 'RESET_ORDER_ERRORS';\r\nexport const EMPTY_CART = 'EMPTY_CART';\r\n\r\n//Actions for getting products from server\r\nexport const getProducts = () => ({\r\n    type: GET_PRODUCTS\r\n});\r\n\r\nexport const getProductsSuccess = products => ({\r\n    type: GET_PRODUCTS_SUCCESS,\r\n    products\r\n});\r\n\r\nexport const getProductsFailed = () => ({\r\n    type: GET_PRODUCTS_FAILED,\r\n    error: 'Could not get products from server'\r\n});\r\n\r\n//Action for adding item to cart\r\nexport const addToCart = (id, quantity) => ({\r\n    type: ADD_TO_CART,\r\n    quantity,\r\n    id\r\n});\r\n\r\n//Action for removeing item from cart\r\nexport const removeFromCart = id => ({\r\n    type: REMOVE_FROM_CART,\r\n    id\r\n});\r\n\r\n//Action for incrementing cartQuantity of an item in cart\r\nexport const incrementProduct = id => ({\r\n    type: INCRMENT_PRODUCT,\r\n    id\r\n});\r\n\r\n//Action for decrementing cartQuantity of an item in cart\r\nexport const decrementProduct = id => ({\r\n    type: DECRMENT_PRODUCT,\r\n    id\r\n});\r\n\r\n//ACtions for placing order\r\nexport const placeOrder = () => ({\r\n    type: PLACE_ORDER\r\n});\r\n\r\nexport const placeOrderSuccess = () => ({\r\n    type: PLACE_ORDER_SUCCESS\r\n});\r\n\r\nexport const placeOrderFailed = () => ({\r\n    type: PLACE_ORDER_FAILED\r\n});\r\n\r\nexport const resetOrderErrors = () => ({\r\n    type: RESET_ORDER_ERRORS\r\n});\r\n\r\nexport const emptyCart = () => ({\r\n    type: EMPTY_CART\r\n});\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//Actions\r\nimport { AddToCart } from '../../store/actions/productsActions';\r\n\r\n\r\nclass Product extends Component {\r\n    state = {\r\n        quantity: 1\r\n    }\r\n\r\n    handleAddToCart = () => {\r\n        if(this.props.auth.isEmpty) this.props.history.push('/login');\r\n        else{            \r\n            if(this.props.data.quantity)\r\n            this.props.AddToCart(this.props.data.id, this.state.quantity);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { name, image, quantity, id, price } = this.props.data;\r\n        const inCart = this.props.cartItems.find(item => item.id === id);\r\n        return (\r\n            <div className=\"product\">\r\n                <img src={`./images/${image}.jpg`} alt=\"\"/>\r\n                <div className=\"product-info\">\r\n                    <div className=\"product-name\">{name}</div>\r\n                    <div className=\"product-price\">{price}€</div>\r\n                    <div className=\"product-quantity\">Left in stock: {quantity}</div> \r\n                    {quantity > 0 ? <button disabled={inCart || !quantity} onClick={this.handleAddToCart}>{inCart ? 'Added to cart' : 'Add to cart'}</button> : <button disabled>Out of stock</button>}\r\n                </div>   \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    cartItems: state.products.cartItems\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { AddToCart })(Product));\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//Components\r\nimport Product from './Product';\r\n\r\nclass ProductList extends Component {\r\n    render() {\r\n        if(this.props.loading) \r\n            return <div style={{textAlign: 'center'}}><img src=\"./images/spinner.svg\" alt=\"\"/></div>\r\n        if(this.props.error)\r\n            return <div style={{textAlign: 'center'}}><h1>{this.props.error}</h1></div>\r\n\r\n        const productData = this.props.productData.map(product => {\r\n            return <Product key={product.id} data={product}/>\r\n        }); \r\n\r\n        return (\r\n            <div className=\"products\">\r\n                {productData}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.products.loading,\r\n    error: state.products.error\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(ProductList));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//Components\r\nimport ProductList from '../reusable/ProductList';\r\n\r\n//Actions\r\nimport { GetProducts } from '../../store/actions/productsActions';\r\n\r\nclass Products extends Component {\r\n    componentDidMount(){\r\n        this.props.GetProducts();\r\n    }\r\n\r\n    render() {\r\n        const { products } = this.props;\r\n        const { path } = this.props.match;\r\n        return (\r\n            <div className=\"product-list\">\r\n                <h3>{path === '/' ? 'Some products' : 'Products'}</h3>\r\n                <ProductList productData={path === '/' ? products.slice(0, 6) : products}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.products.products,\r\n    cartItems: state.products.cartItems\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { GetProducts })(Products));","import React, { Component } from 'react';\r\n\r\nclass CartItem extends Component {\r\n    render() {\r\n        const { name, image, quantity, cartQuantity, id, price } = this.props.data;\r\n        return (\r\n            <div className=\"cart-item\">\r\n                <div className=\"image\">\r\n                    <img src={`./images/${image}.jpg`} alt=\"\"/>\r\n                </div>\r\n                <div  className=\"item-data\">\r\n                    <div className=\"product-name\"><h3>{name}</h3></div>\r\n                    <div className=\"product-quantity\"><b>Left in stock</b>: {quantity}, <b>Price</b>: {price}€ </div> \r\n                    <div>\r\n                        <div className=\"cart-quantity\">Quantity of the item in your cart: {cartQuantity}, <b>Total: </b> {cartQuantity * price}€</div>\r\n                        {this.props.dontShowAllButtons ? '' :\r\n                            <>\r\n                                <button onClick={() => {if(quantity > cartQuantity) this.props.increment(id);}}>Add an item</button> \r\n                                <button onClick={() => {\r\n                                    if(cartQuantity === 1) this.props.remove(id);\r\n                                    else this.props.decrement(id);\r\n                                }}>Remove an item</button>   \r\n                                <button onClick={() => this.props.remove(id)}>Remove all</button> \r\n                            </>\r\n                        }    \r\n                    </div> \r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CartItem;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Components\r\nimport CartItem from './CartItem';\r\n\r\n//Actions\r\nimport { incrementProductQuantity as increment } from '../../store/actions/productsActions';\r\nimport { decrementProductQuantity as decrement } from '../../store/actions/productsActions';\r\nimport { RemoveFromCart } from '../../store/actions/productsActions';\r\n\r\n\r\nclass Cart extends Component {\r\n    render() {\r\n        const { cartItems } = this.props;\r\n        const items = cartItems.map((item) => \r\n            <CartItem \r\n                key={item.id} \r\n                data={item} \r\n                increment={this.props.increment} \r\n                decrement={this.props.decrement}\r\n                remove={this.props.RemoveFromCart}\r\n            />\r\n        );\r\n\r\n        let total = 0;\r\n        cartItems.forEach(item => {\r\n            total += item.cartQuantity * item.price;\r\n        });\r\n        \r\n        return (\r\n            <div className=\"cart\">\r\n                {items.length > 0 ? items : <h3>There are no items in your cart</h3>}\r\n                <h2>Total: {total}€</h2>\r\n                {items.length > 0 ? <Link className=\"proceed-button\" to=\"/accept-address\">Proceed</Link> : ''}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.products.products,\r\n    cartItems: state.products.cartItems\r\n});\r\n\r\nexport default connect(mapStateToProps, { increment, decrement, RemoveFromCart })(Cart);","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//Actions\r\nimport { action_setUpdateAddress } from '../../store/actions/authActions';\r\n\r\nconst Address = props => {\r\n    const { street, zipCode, city, country, number, id } = props.address;\r\n    return (\r\n        <div className=\"address\" style={props.active ? {borderColor: 'white'} : {}}>\r\n            <div className=\"left\">\r\n                Country: {country}, {city}, {zipCode} <br/> Street: {street}, {number}\r\n            </div>\r\n            {props.dontShowButtons ? '' :\r\n                <div className=\"right\">\r\n                    {props.select ? <Link to=\"/payment\" onClick={() => props.makeActive(id)}>Select</Link> : ''}\r\n                    <button onClick={() => {\r\n                        props.setUpdateAddress(id);\r\n                        props.history.push('/account/update-address');\r\n                    }}>Edit</button>\r\n                    <button onClick={() => {\r\n                        props.delete(id, props.id);\r\n                    }}>Delete</button>\r\n                </div> \r\n            }            \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    id: state.auth.userInfo.id\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { setUpdateAddress: action_setUpdateAddress })(Address));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//Components\r\nimport Address from './Address';\r\n\r\n//Actions\r\nimport { action_makeAddressActive, action_deleteAddress } from '../../store/actions/authActions';\r\n\r\nclass UserAddresses extends Component {\r\n    render() {\r\n        if(this.props.auth.isEmpty) return <Redirect to=\"/\"/>\r\n\r\n        \r\n        const { addresses } = this.props.auth.userInfo;\r\n        const { activeAddressID } = this.props.auth;\r\n        let addressComponents;\r\n\r\n        if(addresses) addressComponents = addresses.map(address => \r\n            <Address \r\n                key={address.id}  \r\n                active={activeAddressID === address.id} \r\n                select={true} \r\n                address={address}\r\n                makeActive={this.props.action_makeAddressActive}\r\n                delete={this.props.action_deleteAddress}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <div className=\"addresses\">\r\n                {!addresses || addresses.length === 0  ? <h3>No addresses saved</h3> : addressComponents} <br/>\r\n                <Link to=\"/account/add-address\">Add new address</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { action_makeAddressActive, action_deleteAddress })(UserAddresses);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//Componets\r\nimport Address from '../cart/Address';\r\n\r\n//Actions\r\nimport { \r\n    action_updateAddress, \r\n    action_deleteAddress\r\n} from '../../store/actions/authActions';\r\n\r\nclass Account extends Component {\r\n    render() {\r\n        if(this.props.auth.isEmpty) return <Redirect to=\"/\"/>\r\n\r\n        const addresses = this.props.auth.userInfo.addresses.map(address => {\r\n            return <Address key={address.id} address={address} delete={this.props.action_deleteAddress}/>\r\n        });\r\n\r\n        return (\r\n            <div className=\"account\">\r\n                <div className=\"account-details\">\r\n                    <div className=\"account-image\">Spot for image</div>\r\n                    <div className=\"account-description\">\r\n                        <h2>Username: {this.props.auth.userInfo.username}</h2>\r\n                        other stuff...\r\n                    </div>\r\n                </div>\r\n                <div className=\"account-addresses\">\r\n                    <h3>Addresses:</h3>\r\n\r\n                    {addresses.length > 0 ? addresses : <p>You have no addresses saved</p>}\r\n                    <Link to=\"/account/add-address\">Add an address</Link> <br/>\r\n                    <Link to=\"/account/orders\">See past orders</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { action_updateAddress, action_deleteAddress })(Account);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//Components\r\nimport ErrorMessage from '../layout/ErrorMessage';\r\nimport Message from '../layout/Message';\r\n\r\n//Actions\r\nimport { action_addNewAddress } from '../../store/actions/authActions';\r\nimport { addAddress } from '../../store/actions/action_creators/auth';\r\n\r\nclass AddAddress extends Component {\r\n\r\n    state = {\r\n        street: '',\r\n        zipCode: '',\r\n        number: '',\r\n        city: '',\r\n        country: '',\r\n        error: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.resetErrors();\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { street, zipCode, number, city, country } = this.state;\r\n        if(street && zipCode && number && city && country){\r\n            this.setState({\r\n                street: '',\r\n                zipCode: '',\r\n                number: '',\r\n                city: '',\r\n                country: '',\r\n                error: null\r\n            });\r\n            this.props.action_addNewAddress({street, zipCode, number, city, country}, this.props.userId);\r\n        }\r\n        else{\r\n            this.setState({error: 'One or more fields is empty'});\r\n        }\r\n\r\n    }\r\n\r\n    handleChnage = e => {\r\n        this.setState({[e.target.id]: e.target.value});\r\n    }   \r\n\r\n    render() {\r\n        const { street, zipCode, number, city, country, error } = this.state;\r\n        const { addressError, addressMsg } = this.props;\r\n\r\n        return (\r\n            <div className=\"add-address\">\r\n                <form onSubmit={this.handleSubmit} className=\"add-address-form\">\r\n                    {error ? <ErrorMessage message={error}/> : ''}\r\n                    {addressError ? <ErrorMessage message={addressError}/> : ''}\r\n                    {addressMsg ? <Message message={addressMsg}/> : ''}\r\n                    <div className=\"input-grid\">\r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"country\">Country/State</label>\r\n                            <input type=\"text\" id=\"country\" onChange={this.handleChnage} value={country}/>\r\n                        </div>\r\n\r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"city\">City</label>\r\n                            <input type=\"text\" id=\"city\" onChange={this.handleChnage} value={city}/>\r\n                        </div>\r\n                        \r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"zipCode\">ZIP code</label>\r\n                            <input type=\"text\" id=\"zipCode\" onChange={this.handleChnage} value={zipCode}/>\r\n                        </div>\r\n\r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"street\">Street</label>\r\n                            <input type=\"text\" id=\"street\" onChange={this.handleChnage} value={street}/>\r\n                        </div>\r\n\r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"number\">House no.</label>\r\n                            <input type=\"text\" id=\"number\" onChange={this.handleChnage} value={number}/>\r\n                        </div>\r\n                    </div>\r\n                    <button>Add address</button>\r\n                    <button onClick={() => this.props.history.goBack()}>Go back</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    addressError: state.auth.addressError,\r\n    addressMsg: state.auth.addressMsg,\r\n    userId: state.auth.userInfo.id\r\n});\r\n\r\nconst resetErrors = () => dispatch => dispatch(addAddress());\r\n\r\nexport default withRouter(connect(mapStateToProps, { action_addNewAddress, resetErrors })(AddAddress));","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Payment = props => {\r\n    const { isEmpty, cartItemNumber } = props;\r\n    if(isEmpty || cartItemNumber <= 0) return <Redirect to=\"/\"/>\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <form>\r\n                <h3>Fake payment(doesn't do anything)</h3>\r\n                <label htmlFor=\"card-num\">Card number</label>\r\n                <input type=\"text\" id=\"card-num\"/>\r\n                <Link to=\"checkout\">Proceed</Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isEmpty: state.auth.isEmpty,\r\n    cartItemNumber: state.products.cartItems.length\r\n});\r\n\r\nexport default connect(mapStateToProps)(Payment);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\n//Components\r\nimport CartItem from './CartItem';\r\nimport Address from './Address';\r\nimport ErrorMessage from '../layout/ErrorMessage';\r\nimport Message from '../layout/Message';\r\n\r\n//Actions\r\nimport { incrementProductQuantity as increment } from '../../store/actions/productsActions';\r\nimport { decrementProductQuantity as decrement } from '../../store/actions/productsActions';\r\nimport { RemoveFromCart, action_placeOrder, action_resetOrderErrors } from '../../store/actions/productsActions';\r\n\r\nclass Checkout extends Component {\r\n    state = {\r\n        cartItems: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.action_resetOrderErrors();\r\n        this.setState({\r\n            cartItems: this.props.cartItems\r\n        });\r\n    }\r\n\r\n    handlePlaceOrder = () => {\r\n        const address = this.props.addresses.filter(address => address.id === this.props.activeAddressID)[0];\r\n        const { cartItems } = this.props;\r\n        const order = { address, cartItems };\r\n        this.props.action_placeOrder(order, this.props.userId);\r\n    }\r\n\r\n    render() {        \r\n        if(!this.props.cartItems || !this.props.addresses || !this.props.activeAddressID)\r\n            return <Redirect to=\"/\"/>\r\n\r\n        if(this.props.cartItems.length === 0 && !this.props.checkoutLoading)\r\n            return <Redirect to=\"/cart\"/>\r\n\r\n        const cartItems = this.state.cartItems.map(item => \r\n            <CartItem \r\n                key={item.id} \r\n                data={item} \r\n                increment={this.props.increment} \r\n                decrement={this.props.decrement}\r\n                remove={this.props.RemoveFromCart}\r\n                dontShowAllButtons={true}\r\n            />\r\n        );\r\n        \r\n        const address = this.props.addresses.filter(address => address.id === this.props.activeAddressID)[0];\r\n        return (\r\n            <div className=\"checkout\">\r\n                {this.props.orderMsg ? <Message message={this.props.orderMsg}/> : ''}\r\n                {this.props.orderError ? <ErrorMessage message={this.props.orderError}/> : ''}\r\n                {this.props.orderMsg ? '' : <button onClick={this.handlePlaceOrder} style={{marginBottom: '10px'}}>Order</button>}\r\n                <h3>Delivery address:</h3>\r\n                <Address address={address} dontShowButtons={true}/>\r\n                <h3 style={{marginBottom: '10px '}}>Items:</h3>\r\n                {cartItems}\r\n                {this.props.orderMsg ? '' : <button onClick={this.handlePlaceOrder}>Order</button>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    cartItems: state.products.cartItems,\r\n    addresses: state.auth.userInfo.addresses,\r\n    activeAddressID: state.auth.activeAddressID,\r\n    checkoutLoading: state.products,\r\n    orderMsg: state.products.orderMsg,\r\n    orderError: state.products.orderError,\r\n    userId: state.auth.userInfo.id\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { increment, decrement, RemoveFromCart, action_placeOrder, action_resetOrderErrors })(Checkout));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\n//Components\r\nimport ErrorMessage from '../layout/ErrorMessage';\r\nimport Message from '../layout/Message';\r\n\r\n//Actions\r\nimport { action_updateAddress } from '../../store/actions/authActions';\r\nimport { updateAddress } from '../../store/actions/action_creators/auth';\r\n\r\nclass UpdateAddress extends Component {\r\n\r\n    state = {\r\n        street: '',\r\n        zipCode: '',\r\n        number: '',\r\n        city: '',\r\n        country: '',\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.addresses || !this.props.addressID) this.props.history.push('/');\r\n        this.props.resetErrors();\r\n        const address = this.props.addresses.find(address => address.id === this.props.addressID);\r\n        const { street, zipCode, number, city, country } = address;\r\n        this.setState({\r\n            street,\r\n            zipCode,\r\n            number,\r\n            city,\r\n            country,\r\n            error: null\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { street, zipCode, number, city, country } = this.state;\r\n        if(street && zipCode && number && city && country){\r\n            this.setState({\r\n                street: '',\r\n                zipCode: '',\r\n                number: '',\r\n                city: '',\r\n                country: '',\r\n                error: null\r\n            });\r\n            this.props.action_updateAddress({street, zipCode, number, city, country, addressID: this.props.addressID}, this.props.id);\r\n            this.props.history.goBack();\r\n        }\r\n        else{\r\n            this.setState({error: 'One or more fields is empty'});\r\n        }\r\n\r\n    }\r\n\r\n    handleChnage = e => {\r\n        this.setState({[e.target.id]: e.target.value});\r\n    }   \r\n\r\n    render() {\r\n        const { street, zipCode, number, city, country, error } = this.state;\r\n        const { addressError, addressMsg, isEmpty } = this.props;\r\n\r\n        if(isEmpty) return <Redirect to=\"/\"/>\r\n        \r\n        return (\r\n            <div className=\"add-address\">\r\n                <form onSubmit={this.handleSubmit} className=\"add-address-form\">\r\n                    {error ? <ErrorMessage message={error}/> : ''}\r\n                    {addressError ? <ErrorMessage message={addressError}/> : ''}\r\n                    {addressMsg ? <Message message={addressMsg}/> : ''}\r\n                    <div className=\"input-grid\">\r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"country\">Country/State</label>\r\n                            <input type=\"text\" id=\"country\" onChange={this.handleChnage} value={country}/>\r\n                        </div>\r\n\r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"city\">City</label>\r\n                            <input type=\"text\" id=\"city\" onChange={this.handleChnage} value={city}/>\r\n                        </div>\r\n                        \r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"zipCode\">ZIP code</label>\r\n                            <input type=\"text\" id=\"zipCode\" onChange={this.handleChnage} value={zipCode}/>\r\n                        </div>\r\n\r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"street\">Street</label>\r\n                            <input type=\"text\" id=\"street\" onChange={this.handleChnage} value={street}/>\r\n                        </div>\r\n\r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"number\">House no.</label>\r\n                            <input type=\"text\" id=\"number\" onChange={this.handleChnage} value={number}/>\r\n                        </div>\r\n                    </div>\r\n                    <button>Update address</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    addressID: state.auth.updateAddressID,\r\n    addresses: state.auth.userInfo.addresses,\r\n    isEmpty: state.auth.isEmpty,\r\n    id: state.auth.userInfo.id\r\n});\r\n\r\nconst resetErrors = () => dispatch => dispatch(updateAddress());\r\n\r\nexport default withRouter(connect(mapStateToProps, { action_updateAddress, resetErrors })(UpdateAddress));","import React, { Component } from 'react';\r\n\r\nclass OrderItem extends Component {\r\n    render() {\r\n        const { name, image, cartQuantity, price } = this.props.data;\r\n        return (\r\n            <div className=\"cart-item\">\r\n                <div className=\"image\">\r\n                    <img src={`./images/${image}.jpg`} alt=\"\"/>\r\n                </div>\r\n                <div  className=\"item-data\">\r\n                    <div className=\"product-name\"><h3>{name}</h3></div>\r\n                    <div className=\"product-quantity\"><b>Price</b>: {price}€</div> \r\n                    <div>\r\n                        <div className=\"cart-quantity\">Items bought: {cartQuantity}, <b>Total: </b> {cartQuantity * price}€</div>\r\n                    </div> \r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderItem;","import React from 'react';\r\n\r\n//Components\r\nimport Address from '../cart/Address';\r\nimport OrderItem from './OrderItem';\r\n\r\nconst Order = props => {\r\n    \r\n    console.log(props.data);\r\n    const cartItems = props.data.cartItems.map(item => <OrderItem key={item.id} data={item} dontShowButtons={true}/>);\r\n    const date = props.data.date.slice(0, 10);\r\n    let value = 0;\r\n    props.data.cartItems.forEach(item => {\r\n        value += item.price * item.cartQuantity;\r\n    });\r\n    return (\r\n        <div>\r\n            <h2 style={hStyle}>Address</h2>\r\n            <Address address={props.data.address} dontShowButtons={true}/>\r\n            <h2 style={hStyle}>Items</h2>\r\n            {cartItems}\r\n            <small>{date}</small> <h2>Total value: {value}€</h2>\r\n            <hr/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Order;\r\n\r\nconst hStyle = {\r\n    marginBottom: '6px'\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n \r\n//Components\r\nimport Order from './Order';\r\n\r\n//Actions\r\nimport { action_getUserOrders } from '../../store/actions/authActions';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount(){\r\n        this.props.action_getUserOrders(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        const orders = this.props.orders.map(order => <Order data={order} key={order.id}/>);\r\n        if(this.props.isEmpty) return <Redirect to=\"/\"/>\r\n\r\n        return (\r\n            <div className=\"account\">\r\n                {orders.length > 0 ? orders : 'You have no past orders'}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    orders: state.auth.userOrders,\r\n    isEmpty: state.auth.isEmpty,\r\n    id: state.auth.userInfo.id\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { action_getUserOrders })(Orders));\r\n\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'; \r\n\r\n//Components\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport Products from './components/products/Products';\r\nimport Cart from './components/cart/Cart';\r\nimport UserAddresses from './components/cart/UserAddresses';\r\nimport Account from './components/account/Account';\r\nimport AddAddress from './components/account/AddAddress';\r\nimport Payment from './components/cart/Payment';\r\nimport Checkout from './components/cart/Checkout';\r\nimport UpdateAddress from './components/account/UpdateAddress';\r\nimport Orders from './components/account/Orders';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Products}/>\r\n            <Route exact path=\"/products\" component={Products}/>\r\n            <Route exact path=\"/login\" component={Login}/>\r\n            <Route exact path=\"/register\" component={Register}/>\r\n            <Route exact path=\"/cart\" component={Cart}/>\r\n            <Route exact path=\"/accept-address\" component={UserAddresses}/>\r\n            <Route exact path=\"/account\" component={Account}/>\r\n            <Route exact path=\"/account/add-address\" component={AddAddress}/>\r\n            <Route exact path=\"/account/update-address\" component={UpdateAddress}/>\r\n            <Route exact path=\"/payment\" component={Payment}/>\r\n            <Route exact path=\"/checkout\" component={Checkout}/>\r\n            <Route exact path=\"/account/orders\" component={Orders}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//Actions\r\nimport { action_logout } from '../../store/actions/authActions';\r\n\r\nclass SignedInLinks extends Component{\r\n\r\n    handleLogout = e => {\r\n        e.preventDefault();\r\n        this.props.action_logout();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <li><Link to=\"/cart\">Cart</Link></li>\r\n                <li><Link to=\"/account\">Account</Link></li>\r\n                <li><a onClick={this.handleLogout} href=\"/\">Logout</a></li>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { action_logout })(SignedInLinks);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <>\r\n            <li><Link to=\"/login\">Login</Link></li>\r\n            <li><Link to=\"/register\">Register</Link></li>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignedOutLinks;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\n\r\n//Actions\r\nimport { action_checkIfLoggedIn } from '../../store/actions/authActions';\r\n\r\nclass Navbar extends Component{\r\n    componentDidMount(){\r\n        this.props.action_checkIfLoggedIn();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"navbar\">\r\n                <div className=\"title\">Webstore project</div>\r\n                <div className=\"links-row\">\r\n                    {this.props.auth.loginCheck ? \r\n                        '' : \r\n                        <ul>\r\n                            <li><Link to=\"/\">Home</Link></li>\r\n                            <li><Link to=\"/products\">Products</Link></li>\r\n                            {this.props.auth.isEmpty ? <SignedOutLinks/> : <SignedInLinks/>}                    \r\n                        </ul>  \r\n                    }              \r\n                </div>\r\n                <div className=\"bottom-row\"></div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { action_checkIfLoggedIn })(Navbar);","import React, { Component } from 'react';\r\nimport Routes from '../Routes';\r\n\r\n//Components\r\nimport Navbar from './layout/Navbar';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">  \r\n                <Navbar/>\r\n                <main>  \r\n                    <Routes/>\r\n                </main>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import {\r\n\tREGISTER,\r\n\tREGISTER_SUCCESS,\r\n\tREGISTER_FAILED,\r\n\tLOGIN,\r\n\tLOGIN_SUCCESS,\r\n\tLOGIN_FAILED,\r\n\tLOGOUT,\r\n\tCHECK_IF_LOGGED_IN,\r\n\tCHECK_IF_LOGGED_IN_SUCCESS,\r\n\tCHECK_IF_LOGGED_IN_FAILED,\r\n\tRESET_ERRORS,\r\n\tADD_ADDRESS,\r\n\tADD_ADDRESS_SUCCESS,\r\n\tADD_ADDRESS_FAILED,\r\n\tUPDATE_ADDRESS,\r\n\tUPDATE_ADDRESS_SUCCESS,\r\n\tUPDATE_ADDRESS_FAILED,\r\n\tDELETE_ADDRESS,\r\n\tDELETE_ADDRESS_SUCCESS,\r\n\tDELETE_ADDRESS_FAILED,\r\n\tMAKE_ADDRESS_ACTIVE,\r\n\tSET_UPDATE_ADDRESS,\r\n\tGET_USER_ORDERS\r\n} from '../actions/action_creators/auth';\r\n\r\n\r\nimport { action_EmptyCart } from '../actions/productsActions';\r\n\r\nconst initState = {\r\n    userInfo: { username: '123', addresses: [], id: 4},\r\n\tisEmpty: false,\r\n\tactiveAddressID: null,\r\n\tupdateAddressID: null,\r\n\ttoken: null,\r\n\r\n\t//Variable for checking if user is logged in when site loads\r\n\tloginCheck: true,\r\n\r\n\t//Register messages and errors\r\n\tregMsg: null,\r\n\tregErrors: [],\r\n\r\n\t//Login messages and errors\r\n\tlogMsg: null,\r\n\tlogErrors: [],\r\n\r\n\t//Address messages and errors\r\n\taddressMsg: null,\r\n\taddressError: null,\r\n\r\n\t//User orders\r\n\tuserOrders: []\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase REGISTER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tregErrors: []\r\n\t\t\t};\r\n\r\n\t\tcase REGISTER_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tregMsg: action.msg\r\n\t\t\t};\r\n\r\n\t\tcase REGISTER_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tregErrors: action.errors \r\n\t\t\t};\r\n\r\n\t\tcase LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogErrors: []\r\n\t\t\t}\r\n\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem('token', action.token);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogMsg: action.msg,\r\n\t\t\t\tisEmpty: false,\r\n\t\t\t\tuserInfo: action.userInfo,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t};\r\n\r\n\t\tcase LOGIN_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogErrors: action.errors\r\n\t\t\t};\r\n\r\n\t\tcase LOGOUT:{\r\n\t\t\taction_EmptyCart();\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo: {},\r\n\t\t\t\tisEmpty: true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase CHECK_IF_LOGGED_IN: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloginCheck: true\r\n\t\t\t}\r\n\r\n\t\tcase CHECK_IF_LOGGED_IN_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloginCheck: false,\r\n\t\t\t\tuserInfo: action.userInfo,\r\n\t\t\t\tisEmpty: false\r\n\t\t\t}\r\n\r\n\t\tcase CHECK_IF_LOGGED_IN_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloginCheck: false\r\n\t\t\t}\r\n\r\n\t\tcase RESET_ERRORS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tregMsg: null,\r\n\t\t\t\tregErrors: [],\r\n\t\t\t\tlogMsg: null,\r\n\t\t\t\tlogErrors: []\r\n\t\t\t}\r\n\r\n\t\tcase ADD_ADDRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressMsg: null,\r\n\t\t\t\taddressError: null\r\n\t\t\t}\r\n\r\n\t\tcase ADD_ADDRESS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo: action.userInfo,\r\n\t\t\t\taddressMsg: 'New address added'\r\n\t\t\t}\r\n\r\n\t\tcase ADD_ADDRESS_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressError: action.error || 'Could not add new address'\r\n\t\t\t}\r\n\r\n\t\tcase UPDATE_ADDRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressMsg: null,\r\n\t\t\t\taddressError: null\r\n\t\t\t}\r\n\r\n\t\tcase UPDATE_ADDRESS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo: action.userInfo,\r\n\t\t\t\taddressMsg: 'New address added'\r\n\t\t\t}\r\n\r\n\t\tcase UPDATE_ADDRESS_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressError: 'Could not update address'\r\n\t\t\t}\r\n\r\n\t\tcase DELETE_ADDRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressMsg: null,\r\n\t\t\t\taddressError: null\r\n\t\t\t}\r\n\r\n\t\tcase DELETE_ADDRESS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo: action.userInfo,\r\n\t\t\t\taddressMsg: 'Address deleted'\r\n\t\t\t}\r\n\r\n\t\tcase DELETE_ADDRESS_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressError: 'Could not delete address'\r\n\t\t\t}\r\n\r\n\t\tcase MAKE_ADDRESS_ACTIVE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveAddressID: action.id\r\n\t\t\t}\r\n\r\n\t\tcase SET_UPDATE_ADDRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tupdateAddressID: action.id\r\n\t\t\t}\r\n\r\n\t\tcase GET_USER_ORDERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserOrders: action.orders\r\n\t\t\t}\r\n\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default authReducer;","import {\r\n    GET_PRODUCTS,\r\n    GET_PRODUCTS_SUCCESS,\r\n    GET_PRODUCTS_FAILED,\r\n    ADD_TO_CART,\r\n    REMOVE_FROM_CART,\r\n    INCRMENT_PRODUCT,\r\n    DECRMENT_PRODUCT,\r\n    PLACE_ORDER,\r\n    PLACE_ORDER_SUCCESS,\r\n    PLACE_ORDER_FAILED,\r\n    RESET_ORDER_ERRORS,\r\n    EMPTY_CART\r\n} from '../actions/action_creators/products';\r\n\r\n\r\nconst initState = {\r\n    products: [],\r\n    cartItems: [],\r\n    loading: true,\r\n    error: null,\r\n    checkoutLoading: false,\r\n    orderMsg: null,\r\n    orderError: null\r\n}\r\n\r\nconst productsReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case GET_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        case GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.products\r\n            }\r\n\r\n        case GET_PRODUCTS_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n\r\n        case ADD_TO_CART:\r\n            const { id, quantity } = action;\r\n            const foundItem = state.products.find(item => item.id === id);\r\n            const newItem = {\r\n                id: foundItem.id,\r\n                cartQuantity: quantity,\r\n                quantity: foundItem.quantity,\r\n                image: foundItem.image,\r\n                name: foundItem.name,\r\n                price: foundItem.price\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems, newItem]\r\n            }\r\n\r\n        case REMOVE_FROM_CART:{\r\n            const newCartItems = state.cartItems.filter(item => item.id !== action.id);\r\n            return {\r\n                ...state,\r\n                cartItems: newCartItems\r\n            }\r\n        }            \r\n\r\n        case INCRMENT_PRODUCT:{\r\n            const { id } = action;\r\n            const newProducts = state.cartItems.map(item => {\r\n                if(item.id === id && item.cartQuantity < item.quantity) {\r\n                    item.cartQuantity++;\r\n                    return item;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                ...state,\r\n                products: newProducts\r\n            }\r\n        }            \r\n\r\n        case DECRMENT_PRODUCT:{\r\n            const { id } = action;\r\n            const newProducts = state.cartItems.map(item => {\r\n                if(item.id === id && item.cartQuantity > 0) {\r\n                    item.cartQuantity--;\r\n                    return item;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                ...state,\r\n                products: newProducts\r\n            }\r\n        }      \r\n        \r\n        case PLACE_ORDER:\r\n            return {\r\n                ...state,\r\n                checkoutLoading: true,\r\n                orderError: null,\r\n                orderMsg: null\r\n            }\r\n\r\n        case PLACE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                checkoutLoading: false,\r\n                cartItems: [],\r\n                products: [],\r\n                orderMsg: 'The order was accepted'\r\n            }\r\n\r\n        case PLACE_ORDER_FAILED:\r\n            return {\r\n                ...state,\r\n                checkoutLoading: false,\r\n                orderError: 'The order was not accepted'\r\n            }\r\n\r\n        case RESET_ORDER_ERRORS:\r\n            return {\r\n                ...state,\r\n                orderError: null,\r\n                orderMsg: null\r\n            }\r\n\r\n        case EMPTY_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productsReducer;","import { combineReducers } from 'redux';\r\n\r\n//Reducers\r\nimport authReducer from './authReducer';\r\nimport productsReducer from './productsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    products: productsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import rootReducer from './store/reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { configureStore } from 'redux-starter-kit';\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [thunk/*, logger*/],\r\n    devTools: true\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n//Sass\r\nimport './sass/index.scss';\r\n\r\n//Store\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<App />\r\n\t\t</Router>\t\r\n\t</Provider>, \r\n\tdocument.getElementById('root')\r\n);"],"sourceRoot":""}