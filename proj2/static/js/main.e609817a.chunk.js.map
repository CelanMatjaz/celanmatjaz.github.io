{"version":3,"sources":["components/layout/ErrorMessage.js","components/auth/LoginP.js","store/actions/action creators/auth.js","fakeBackend.js","components/auth/Login.js","store/actions/actions/actions.auth.js","components/layout/Message.js","components/auth/RegisterP.js","components/auth/Register.js","components/tweet/Tweet.js","components/tweet/Feed.js","components/tweet/FeedProfile.js","components/tweet/TweetP.js","components/tweet/AddTweet.js","components/tweet/EditTweet.js","Routes.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/App.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","store.js","index.js"],"names":["ErrorMessage","props","react_default","a","createElement","className","message","connect","state","loginErrors","auth","_props$data","data","email","password","handleChange","handleSubmit","onSubmit","map","error","index","layout_ErrorMessage","key","htmlFor","type","id","value","onChange","required","types","LOGIN","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT","USERS","username","_id","date","Date","realDate","concat","getDate","getMonth","getFullYear","TWEETS","userID","title","body","src_fakeBackend","fakeBackend","_this","this","Object","classCallCheck","getTweets","tweets","filter","tweet","getTweet","parseInt","login","_ref","user","users","find","status","userInfo","errors","register","_ref2","passwordRepeat","newUser","Math","random","push","addTweet","newTweet","objectSpread","msg","editTweet","_ref3","deleteTweet","newTweets","console","log","length","Login","_Component","_getPrototypeOf2","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","e","setState","defineProperty","target","preventDefault","inherits","createClass","_this$props$auth","isEmpty","authError","LoginP","react_router","to","Component","creds","dispatch","token","RegisterContainer","registerErrors","Message","Register","event","_this$state","RegisterP","Tweet","react_router_dom","slice","profileView","onClick","edit","delete","Feed","fetchTweets","tweet_Tweet","FeedProfile","match","params","handleEdit","history","handleDelete","prevProps","_this2","TweetP","btnText","AddTweet","tweet_TweetP","withRouter","EditTweet","Routes","exact","path","component","logout","Fragment","href","SignedOutLinks","layout_SignedOutLinks","layout_SignedInLinks","App","layout_Navbar","src_Routes","loginCheck","initState","authReducer","undefined","action","localStorage","setItem","removeItem","rootReducer","combineReducers","store","configureStore","reducer","middleware","thunk","devTools","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e609817a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ErrorMessage = props => {\r\n\treturn (\r\n\t\t<div className=\"message error\">\r\n\t\t\t{props.message}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport ErrorMessage from '../layout/ErrorMessage';\r\n\r\nconst Login = props => {\r\n    const { email, password } = props.data;\r\n    const { handleChange, handleSubmit, loginErrors } = props;\r\n    return (\r\n        <div className=\"form form-auth\">\r\n            <form onSubmit={handleSubmit}>  \r\n                {loginErrors.map((error, index) => <ErrorMessage key={index} message={error}/>)}\r\n\r\n                <h1>Login</h1>\r\n                <label htmlFor=\"email\">Email</label> <br/>\r\n                <input type=\"email\" id=\"email\" value={email} onChange={handleChange} required/> <br/>\r\n\r\n                <label htmlFor=\"password\">Password</label> <br/>\r\n                <input type=\"password\" id=\"password\" value={password} onChange={handleChange} required /> <br/>\r\n                <button>Login</button> \r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loginErrors: state.auth.loginErrors\r\n});\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","export const LOGIN = 'LOGIN';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const login = () => ({\r\n    type: LOGIN\r\n});\r\n\r\nexport const loginSuccess = (userInfo, token) => ({\r\n    type: LOGIN_SUCCESS,\r\n    userInfo,\r\n    token\r\n});\r\n\r\nexport const loginFailed = errors => ({\r\n    type: LOGIN_FAILED,\r\n    errors\r\n}); \r\n\r\nexport const logout = () => ({\r\n    type: LOGOUT\r\n}); \r\n\r\nconst types = {\r\n    LOGIN,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILED,\r\n    LOGOUT\r\n}\r\n\r\nexport default types;","const USERS = [\r\n    { username: '123', password: '123', email: 'email1@email.com', _id: 1 },\r\n    { username: '1234', password: '123', email: 'email2@email.com', _id: 2 },\r\n    { username: '12345', password: '123', email: 'email3@email.com', _id: 3 },\r\n    { username: '123456', password: '123', email: 'email4@email.com', _id: 4 },\r\n]\r\n\r\nconst date = new Date();\r\nconst realDate = date => `${date.getDate()}-${date.getMonth()+1}-${date.getFullYear()}`;\r\n\r\nconst TWEETS = [\r\n    { userID: 1, username: '123', title: 'Title1', body: 'Body1', date: realDate(date), _id: 1 },\r\n    { userID: 1, username: '123', title: 'Title2', body: 'Body2', date: realDate(date), _id: 2 },\r\n    { userID: 2, username: '1234', title: 'Title3', body: 'Body3', date: realDate(date), _id: 3 },\r\n    { userID: 2, username: '1234', title: 'Title4', body: 'Body4', date: realDate(date), _id: 4 },\r\n    { userID: 3, username: '12345', title: 'Title5', body: 'Body5', date: realDate(date), _id: 5 },\r\n    { userID: 4, username: '123456', title: 'Title6', body: 'Body6', date: realDate(date), _id: 6 },\r\n    { userID: 1, username: '123', title: 'Title7', body: 'Body7', date: realDate(date), _id: 7 },\r\n    { userID: 3, username: '12345', title: 'Title8', body: 'Body8', date: realDate(date), _id: 8 },\r\n]\r\n\r\nclass fakeBackend{\r\n    constructor(){\r\n        this.tweets = TWEETS;\r\n        this.users = USERS;\r\n    }\r\n\r\n    getTweets = username => {\r\n        \r\n        if(username){\r\n            const tweets = this.tweets.filter(tweet => tweet.username === username);\r\n            return tweets;\r\n        }\r\n        return this.tweets;\r\n    }\r\n\r\n    getTweet = id => {\r\n        return this.tweets.filter(tweet => tweet._id === parseInt(id))[0];\r\n    }\r\n\r\n    login = ({email, password}) => {\r\n        const user = this.users.find(user => user.email === email);\r\n        if(user && user.password === password){\r\n            return {\r\n                status: 'Login_success',\r\n                userInfo: {\r\n                    id: user._id,\r\n                    username: user.username,\r\n                    email: user.email\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            errors: ['Could not log user in']\r\n        }\r\n    }\r\n\r\n    register = ({email, username, password, passwordRepeat}) => {\r\n        const user = this.users.find(user => user.email === email || user.username === username);\r\n        if(!user && password === passwordRepeat){\r\n            const newUser = {\r\n                username,\r\n                email,\r\n                password,\r\n                _id: Math.random()\r\n            }\r\n            this.users.push(newUser);\r\n            return {\r\n                status: 'Register_success'\r\n            }\r\n        }\r\n        return {\r\n            errors: ['Could not register new account']\r\n        }\r\n    }\r\n\r\n    addTweet = (tweet, id, username) => {\r\n        const newTweet = {\r\n            ...tweet,\r\n            userID: id,\r\n            username,\r\n            date: realDate(new Date()),\r\n            _id: Math.random()\r\n        }\r\n\r\n        this.tweets.push(newTweet);\r\n\r\n        return {\r\n            msg: 'Tweet was added'\r\n        }\r\n    }\r\n\r\n    editTweet = ({title, body}, id) => {\r\n        this.tweets.map(tweet => {\r\n            if(tweet._id === parseInt(id)){\r\n                tweet.body = body;\r\n                tweet.title = title;\r\n            }\r\n            return tweet;\r\n        });\r\n        return { msg: 'Tweet was updated' };\r\n    }\r\n\r\n    deleteTweet = id => {\r\n        const newTweets = this.tweets.filter(tweet => {\r\n            console.log(tweet._id !== id);\r\n            return tweet._id !== id\r\n        });\r\n        if(newTweets.length === this.tweets.length){\r\n            return {}\r\n        }        \r\n        this.tweets = newTweets;\r\n        return {\r\n            msg: 'Tweet was deleted'\r\n        }\r\n    }\r\n}\r\n\r\nexport default new fakeBackend();\r\n\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport LoginP from './LoginP';\r\n\r\n//Actions\r\nimport { Login as login } from '../../store/actions/actions/actions.auth';\r\n\r\nexport class Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }  \r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.login({\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        });\r\n\t}\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n    render() {\r\n        const { isEmpty, authError } = this.props.auth;\r\n        \r\n\t\tif(!isEmpty && !authError){\r\n            return <Redirect to={'/'}/>;\r\n        } \r\n\t\t\r\n        return (\r\n            <LoginP data={this.state} handleChange={this.handleChange} handleSubmit={this.handleSubmit}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import {\r\n    login,\r\n    loginSuccess,\r\n    loginFailed,\r\n    logout\r\n} from '../action creators/auth';\r\n\r\nimport fakeBackend from '../../../fakeBackend';\r\n\r\nexport const Login = creds => {\r\n    return dispatch => {\r\n        dispatch(login());\r\n        const data = fakeBackend.login(creds);\r\n        if(data.status === 'Login_success')\r\n            dispatch(loginSuccess(data.userInfo, data.token));        \r\n        else\r\n            dispatch(loginFailed(data.errors || []));        \r\n    }\r\n}\r\n\r\nexport const Logout = () => dispatch => dispatch(logout());","import React from 'react';\r\n\r\nconst ErrorMessage = props => {\r\n\treturn (\r\n\t\t<div className=\"message normal\">\r\n\t\t\t{props.message}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\n\r\n//Components\r\nimport ErrorMessage from '../layout/ErrorMessage';\r\nimport Message from '../layout/Message';\r\n\r\nconst RegisterContainer = props => {\r\n    const { email, username, password, passwordRepeat, registerErrors, message } = props.data;\r\n    const { handleChange, handleSubmit } = props;\r\n    return (\r\n        <div className=\"form form-auth\">\r\n            <form onSubmit={handleSubmit}>                   \r\n                {message ? <Message message={message}/> : ''}\r\n                {registerErrors.map((error, index) => <ErrorMessage key={index} message={error}/>)}\r\n                <h1>Register</h1>\r\n                <label htmlFor=\"email\">Email</label> <br/>\r\n                <input type=\"email\" id=\"email\" value={email} onChange={handleChange} required/><br/>\r\n\r\n                <label htmlFor=\"username\">Username</label> <br/>\r\n                <input type=\"text\" id=\"username\" value={username} onChange={handleChange} required/><br/>\r\n                \r\n                <label htmlFor=\"password\">Password</label> <br/>\r\n                <input type=\"password\" id=\"password\" value={password} onChange={handleChange} required/><br/>\r\n\r\n                <label htmlFor=\"passwordRepeat\">Repeat password</label> <br/>\r\n                <input type=\"password\" id=\"passwordRepeat\" value={passwordRepeat} onChange={handleChange} required/><br/>\r\n\r\n                <button>Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterContainer;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport RegisterP from './RegisterP';\r\n\r\nimport fakeBackend from '../../fakeBackend';\r\n\r\nexport class Register extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        passwordRepeat: '',\r\n        email: '',\r\n        registerErrors: [],\r\n        message: null\r\n    }   \r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();     \r\n        const { username, email, password, passwordRepeat } = this.state;\r\n        this.setState({\r\n            message: null,\r\n            registerErrors: []\r\n        });\r\n\r\n        const data = fakeBackend.register({\r\n            username,\r\n            email,\r\n            password,\r\n            passwordRepeat\r\n        });\r\n\r\n        if(data.status === 'Register_success'){\r\n            this.setState({\r\n                message: 'Account successfuly created',\r\n                registerErrors: [],\r\n                username: '',\r\n                password: '',\r\n                passwordRepeat: '',\r\n                email: '',\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                registerErrors: data.errors || ['Error registering account'],\r\n                message: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.auth.isEmpty) return <Redirect to=\"/\"/>;\t\t\r\n        return (\r\n            <RegisterP data={this.state} handleChange={this.handleChange} handleSubmit={this.handleSubmit}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { /*register*/ })(Register);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Tweet = props => (\r\n\t<div className=\"tweet\">\r\n\t\t<h3 className=\"tweet-header\">{props.data.title}</h3>\r\n\t\t<p className=\"tweet-text\">{props.data.body}</p> <hr/>\r\n\t\t<small>by <Link to={`/profile/${props.data.username}`}>{props.data.username}</Link>, {props.data.date.slice(0, 10)}</small>\r\n\t\t{props.profileView ? \r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={() => props.edit(props.data._id)}>Edit</button>\t\r\n\t\t\t\t<button onClick={() => props.delete(props.data._id)}>Delete</button>\r\n\t\t\t</div>\r\n\t\t\t: ''\r\n\t\t}\r\n\t</div>\r\n);\r\n\r\nexport default Tweet;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport Tweet from './Tweet';\r\n\r\nimport fakeBackend from '../../fakeBackend';\r\n\r\nclass Feed extends Component {\r\n\tstate = {\r\n\t\ttweets: [],\r\n\t\terror: ''\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.fetchTweets();\r\n\t}\r\n\r\n\tfetchTweets = () => {\r\n\t\tconst tweets = fakeBackend.getTweets();\r\n        this.setState({tweets: tweets});\r\n    }\r\n\r\n\trender(){\r\n\t\tconst { error } = this.state;\r\n\t\tconst tweets = this.state.tweets.map(tweet => <Tweet key={tweet._id} data={tweet}/>);\r\n\t\treturn (\r\n\t\t\t<div className=\"feed\">\r\n\t\t\t\t{error  ? error : tweets}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tusername: state.auth.userInfo.username\r\n});\t\r\n\r\nexport default connect(mapStateToProps)(Feed);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport Tweet from './Tweet';\r\n\r\nimport fakeBackend from '../../fakeBackend';\r\n\r\nclass FeedProfile extends Component {\r\n\tstate = {\r\n\t\ttweets: [],\r\n\t\terror: ''\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.fetchTweets();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps !== this.props){\r\n            this.fetchTweets();\r\n        }\r\n    }\r\n\r\n    fetchTweets = () => {\r\n        const username = this.props.match.params.username;\r\n        const tweets = fakeBackend.getTweets(username);\r\n        this.setState({tweets: tweets});\r\n    }\r\n    \r\n    handleEdit = id => {\r\n        this.props.history.push(`/edit-tweet/${id}`);\r\n    }\r\n\r\n    handleDelete = id => {\r\n        const data = fakeBackend.deleteTweet(id);\r\n        if(data.msg === 'Tweet was deleted'){\r\n            this.fetchTweets();\r\n        }\r\n        else{\r\n            this.setState({error: 'Could not delete tweet'});\r\n        }\r\n    }\r\n\r\n\trender(){\r\n\t\tconst { error } = this.state;\r\n\t\tconst tweets = this.state.tweets.map(tweet => \r\n            <Tweet \r\n                key={tweet._id} \r\n                data={tweet} \r\n                profileView={this.props.username === tweet.username} \r\n                edit={this.handleEdit} \r\n                delete={this.handleDelete}\r\n            />\r\n        );\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"feed\">\r\n\t\t\t\t{error ? error : tweets}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    username: state.auth.userInfo.username,\r\n    id: state.auth.userInfo._id\r\n});\t\r\n\r\nexport default connect(mapStateToProps)(FeedProfile);","import React from 'react';\r\n\r\n//Components\r\nimport ErrorMessage from '../layout/ErrorMessage';\r\n\r\nconst TweetP = props => {\r\n    const { title, body, btnText, error } = props.data;\r\n    const { handleSubmit, handleChange } = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {error ? <ErrorMessage message={error}/> : ''}\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input id=\"title\" value={title} onChange={handleChange}/>\r\n\r\n            <label htmlFor=\"body\">Body</label>\r\n            <textarea id=\"body\" value={body} onChange={handleChange}/>\r\n\r\n            <button>{btnText || 'Post'} tweet</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TweetP;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport TweetP from './TweetP';\r\n\r\nimport fakeBackend from '../../fakeBackend';\r\n\r\nclass AddTweet extends Component {\r\n    state = {\r\n        title: '',\r\n        body: '',\r\n        error: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { title, body } = this.state;\r\n        if(title.length < 31 && body.length < 256)\r\n            this.setState({\r\n                [e.target.id]: e.target.value\r\n            });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();        \r\n        const data = fakeBackend.addTweet({title: this.state.title, body: this.state.body}, this.props.id, this.props.username)\r\n        if(data.msg === 'Tweet was added'){\r\n            this.props.history.push(`/profile/${this.props.username}`);\r\n        }\r\n        else{\r\n            this.setState({error: 'Could not post tweet'});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.isEmpty) this.props.history.push('/');\r\n        return (\r\n            <TweetP data={{...this.state, btnText: 'Post'}} handleChange={this.handleChange} handleSubmit={this.handleSubmit}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    username: state.auth.userInfo.username,\r\n    isEmpty: state.auth.isEmpty,\r\n    id: state.auth.userInfo._id\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(AddTweet));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport TweetP from './TweetP';\r\n\r\nimport fakeBackend from '../../fakeBackend';\r\n\r\nclass EditTweet extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        const tweet = fakeBackend.getTweet(this.props.match.params.id);\r\n        if(tweet && tweet.username === this.props.username){\r\n            this.setState({\r\n                title: tweet.title,\r\n                body: tweet.body\r\n            });\r\n        }\r\n        else{\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const data = fakeBackend.editTweet({title: this.state.title, body: this.state.body}, this.props.match.params.id);\r\n        if(data.msg === 'Tweet was updated'){\r\n            this.props.history.push(`/profile/${this.props.username}`);\r\n        }\r\n        else{\r\n            this.setState({error: 'Could not edit tweet'});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TweetP data={{...this.state, btnText: 'Edit'}} handleChange={this.handleChange} handleSubmit={this.handleSubmit}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    username: state.auth.userInfo.username\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditTweet);","import { Route, Switch } from 'react-router-dom'; \r\n\r\nimport React from 'react';\r\n\r\n//Components\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport Feed from './components/tweet/Feed';\r\nimport FeedProfile from './components/tweet/FeedProfile';\r\nimport AddTweet from './components/tweet/AddTweet';\r\nimport EditTweet from './components/tweet/EditTweet';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\" component={Login}/>\r\n            <Route exact path=\"/register\" component={Register}/>\r\n            <Route exact path=\"/\" component={Feed}/>\r\n            <Route exact path=\"/profile/:username\" component={FeedProfile}/>\r\n            <Route exact path=\"/add-tweet\" component={AddTweet}/>\r\n            <Route exact path=\"/edit-tweet/:id\" component={EditTweet}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Actions\r\nimport { Logout as logout } from '../../store/actions/actions/actions.auth';\r\n\r\nconst SignedInLinks = props =>{\r\n\r\n\tconst handleLogout = e => {\r\n\t\te.preventDefault();\r\n\t\tprops.logout()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={`/profile/${props.username}`}>Profile</Link>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><Link to=\"/add-tweet\">Post tweet</Link></li>\r\n\t\t\t\t\t<li><a href=\"/\" onClick={handleLogout}>Logout</a></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</>\r\n\t);\r\n\t\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tusername: state.auth.userInfo.username\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(SignedInLinks);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<li><Link to=\"/register\">Register</Link></li>\t\r\n\t\t\t<li><Link to=\"/login\">Login</Link></li>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n \r\n//Components\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\n\r\nconst Navbar = props => {\r\n\treturn (\r\n\t\t<nav className=\"navbar\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t<Link to=\"/\">Twitter clone</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul className=\"right\">\r\n\t\t\t\t\t{props.auth.isEmpty ? <SignedOutLinks/> : <SignedInLinks/>}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React, { Component } from 'react';\r\nimport Routes from '../Routes';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport Navbar from './layout/Navbar';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar/>\r\n                <main className=\"container\">\r\n                    <Routes/> \r\n                </main>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loginCheck: state.auth.loginCheck\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, {  })(App));","import types from '../actions/action creators/auth';\r\n\r\nconst initState = {\r\n    isEmpty: false,\r\n\tuserInfo: {\r\n\t\tusername: '123',\r\n\t\tid: 1,\r\n\t\temail: 'email1@email.com'\r\n\t},\r\n\tloginErrors: [],\r\n\tloginCheck: true\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase types.LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloginErrors: []\r\n\t\t\t}\r\n\t\t\r\n\t\tcase types.LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem('token', action.token);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo: action.userInfo,\r\n\t\t\t\tloginErrors: [],\r\n\t\t\t\tisEmpty: false\r\n\t\t\t}\r\n\r\n\t\tcase types.LOGIN_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo: {},\r\n\t\t\t\tloginErrors: action.errors\r\n\t\t\t}\r\n\r\n\t\tcase types.LOGOUT:\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo: {},\r\n\t\t\t\tisEmpty: true\r\n\t\t\t}\r\n\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\n\r\n//Reducers\r\nimport authReducer from './authReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import rootReducer from './store/reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { configureStore } from 'redux-starter-kit';\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [thunk],\r\n    devTools: true\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './sass/index.scss';\r\n\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<App />\r\n\t\t</Router>\t\r\n\t</Provider>, \r\n\tdocument.getElementById('root')\r\n);"],"sourceRoot":""}